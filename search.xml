<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[《大数据与机器学习》读书笔记（二） 应用篇]]></title>
      <url>JuniorNi.github.io/2017/04/07/%E3%80%8A%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%B8%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89-%E5%BA%94%E7%94%A8%E7%AF%87/</url>
      <content type="html"><![CDATA[<h1 id="标签系统-“空间换时间”"><a href="#标签系统-“空间换时间”" class="headerlink" title="标签系统 - “空间换时间”"></a>标签系统 - “空间换时间”</h1><h2 id="作用与意义"><a href="#作用与意义" class="headerlink" title="作用与意义"></a>作用与意义</h2><ul>
<li>避免重复计算，提高查询效率</li>
<li>降低数据使用成本</li>
</ul>
<h2 id="层次结构"><a href="#层次结构" class="headerlink" title="层次结构"></a>层次结构</h2><p>整个标签系统可分为多个主题（信用卡系统中的客户主题、卡片主题等），每个主题下又可根据标签数据的来源分为三类（基础类、行为类与衍生类）</p>
<ul>
<li>基础类：如客户的基本信息，无需二次加工</li>
<li>行为类：如客户的历史行为（近一个月投资金额等），需要二次加工</li>
<li>衍生类：其他标签之间的逻辑组合</li>
</ul>
<a id="more"></a>
<p><img src="http://upload-images.jianshu.io/upload_images/4762054-611126ba88fb40d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="更新规则"><a href="#更新规则" class="headerlink" title="更新规则"></a>更新规则</h2><ul>
<li>基础类：静态标签，使用增量更新方式</li>
<li>行为类：动态标签，可采用周期性全量更新</li>
<li>衍生类：<font color="#FF0000">不存储标签值，仅存储标签之间的计算逻辑</font> ，无需更新</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4762054-d7e7dd33fd483a17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<p><br></p>

<h1 id="数据自助营销平台-数据产生价值最直接的途径"><a href="#数据自助营销平台-数据产生价值最直接的途径" class="headerlink" title="数据自助营销平台 - 数据产生价值最直接的途径"></a>数据自助营销平台 - 数据产生价值最直接的途径</h1><h2 id="作用与意义-1"><a href="#作用与意义-1" class="headerlink" title="作用与意义"></a>作用与意义</h2><ul>
<li>自动化，提升工作效率</li>
<li>降低营销成本，提高用户体验</li>
<li>个性化营销，提升响应率<blockquote>
<p>e.g. 某一营销活动（为促动低消费频次的客户用卡，提高卡均消费金额），期望不同的客户收到不同的营销短信。可通过营销平台限定仅6个月用卡次数 &lt; 10，月消费1800满3个月（略高于历史上的月均卡均消费），即可获得免费的化妆品（偏好标签）。</p>
</blockquote>
</li>
<li>统一管理，便于后续效果追踪</li>
</ul>
<p>其中可以看到，各种营销活动规则下的条件来源于标签系统，所以<strong>标签系统</strong>是基础！</p>
<h2 id="实时数据营销"><a href="#实时数据营销" class="headerlink" title="实时数据营销"></a>实时数据营销</h2><p>除了传统的批量营销方式（如优惠券即将过期短信提醒等），还有一种<u><em>“基于场景的营销”</em></u>，如你到加油站加油，刷卡付款后会立马收到某汽车润滑剂的促销信息。</p>
<p>从技术上来看，就是引入“消息队列”（Kafka、ActiveMQ等），将用户基于场景的“动作”转化为一个“消息” 给到数据营销平台，根据匹配的营销规则进行实时处理，反馈结果给客户。</p>
<!-- <font color="#FF0000">asd as  </font>  -->]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[D3学习系列（二） 弦图绘制]]></title>
      <url>JuniorNi.github.io/2017/03/31/D3%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%88%E4%BA%8C%EF%BC%89-%E5%BC%A6%E5%9B%BE%E7%BB%98%E5%88%B6/</url>
      <content type="html"><![CDATA[<h1 id="「什么时候用弦图」"><a href="#「什么时候用弦图」" class="headerlink" title="「什么时候用弦图」"></a>「什么时候用弦图」</h1><p>Chord Diagram主要是用来表示多个节点之间的关系，假设我们要表示5个节点之间的关系，那么输入的矩阵是下面这个样子，且必须是方阵。节点A的长度是元素A所在行的总和，就是(A, A)、(A, B)、(A, C)、(A, D)、(A, E)的和。图中C与D之间的弦表示C和D相关，与C相接的弧长实际上是(C, D)的值。</p>
<a id="more"></a>
<p><img src="http://upload-images.jianshu.io/upload_images/4762054-928a0f7d64bcf0ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<h1 id="「绘制弦图」"><a href="#「绘制弦图」" class="headerlink" title="「绘制弦图」"></a>「绘制弦图」</h1><h2 id="导入初始数据"><a href="#导入初始数据" class="headerlink" title="导入初始数据"></a>导入初始数据</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> city_name = [ <span class="string">"北京"</span> , <span class="string">"上海"</span> , <span class="string">"广州"</span> , <span class="string">"深圳"</span> , <span class="string">"香港"</span>  ];</div><div class="line"><span class="keyword">var</span> population = [</div><div class="line">          [ <span class="number">1000</span>,  <span class="number">3045</span> , <span class="number">4567</span> , <span class="number">1234</span> , <span class="number">3714</span> ],</div><div class="line">          [ <span class="number">3214</span>,  <span class="number">2000</span> , <span class="number">2060</span> , <span class="number">124</span>  , <span class="number">3234</span> ],</div><div class="line">          [ <span class="number">8761</span>,  <span class="number">6545</span> , <span class="number">3000</span> , <span class="number">8045</span> , <span class="number">647</span>  ],</div><div class="line">          [ <span class="number">3211</span>,  <span class="number">1067</span> , <span class="number">3214</span> , <span class="number">4000</span> , <span class="number">1006</span> ],</div><div class="line">          [ <span class="number">2146</span>,  <span class="number">1034</span> , <span class="number">6745</span> , <span class="number">4764</span> , <span class="number">5000</span> ]</div><div class="line">        ];</div></pre></td></tr></table></figure>
<h2 id="布局（转换数据）"><a href="#布局（转换数据）" class="headerlink" title="布局（转换数据）"></a>布局（转换数据）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 弦布局</span></div><div class="line"><span class="keyword">var</span> chord_layout = d3.layout.chord()</div><div class="line">                        .padding(<span class="number">0.03</span>)</div><div class="line">                        .sortSubgroups(d3.descending)</div><div class="line">                        .matrix(population);</div><div class="line"><span class="comment">// 布局转化数据</span></div><div class="line"><span class="keyword">var</span> groups = chord_layout.groups();</div><div class="line"><span class="keyword">var</span> chords = chord_layout.chords();</div></pre></td></tr></table></figure>
<p>padding(0.03)表示弧与弧之间的间隔，population是之前输入的人口数据。经过布局之后会生成两块，一块是groups，表示节点；另一块是chords，表示弦（连线），chords里面还会分source与target，表示连线的两端。</p>
<h2 id="绘制画布SVG"><a href="#绘制画布SVG" class="headerlink" title="绘制画布SVG"></a>绘制画布SVG</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// svg画布</span></div><div class="line"><span class="keyword">var</span> width = <span class="number">600</span>;</div><div class="line"><span class="keyword">var</span> height = <span class="number">600</span>;</div><div class="line"><span class="keyword">var</span> svg = d3.select(<span class="string">"body"</span>)</div><div class="line">            .append(<span class="string">"svg"</span>)</div><div class="line">            .attr(<span class="string">"width"</span>,width)</div><div class="line">            .attr(<span class="string">'height'</span>, height)</div><div class="line">            .append(<span class="string">"g"</span>)</div><div class="line">            .attr(<span class="string">'transform'</span>, <span class="string">'translate('</span> + width/<span class="number">2</span> + <span class="string">","</span> + height/<span class="number">2</span> + <span class="string">")"</span>);</div><div class="line"><span class="keyword">var</span> color20 = d3.scale.category20();</div></pre></td></tr></table></figure>
<p>先创建一个<code>SVG</code>元素，里面添加一个<code>g</code>元素同时设置平移属性（用来确定弦图的中心）。然后再在<code>g</code>元素添加2个<code>g</code>元素，分别用来装节点与弦，结构如下所示：</p>
<blockquote>
<p><code>&lt;svg&gt;</code><br>　－－<code>&lt;g&gt;</code><br>　－－－－ <code>&lt;g&gt;``&lt;/g&gt;</code><br>　－－－－ <code>&lt;g&gt;``&lt;/g&gt;</code><br>　－－<code>&lt;/g&gt;</code><br><code>&lt;/svg&gt;</code> </p>
</blockquote>
<h2 id="绘制节点（弧）"><a href="#绘制节点（弧）" class="headerlink" title="绘制节点（弧）"></a>绘制节点（弧）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 弧生成器</span></div><div class="line"><span class="keyword">var</span> innerRadius = width/<span class="number">2</span> * <span class="number">0.7</span>;</div><div class="line"><span class="keyword">var</span> outerRadius = innerRadius * <span class="number">1.1</span>;</div><div class="line"><span class="keyword">var</span> outer_arc = d3.svg.arc()</div><div class="line">                    .innerRadius(innerRadius)</div><div class="line">                    .outerRadius(outerRadius);</div><div class="line"><span class="comment">// 绘制节点</span></div><div class="line"><span class="keyword">var</span> g_outer = svg.append(<span class="string">"g"</span>);</div><div class="line">g_outer.selectAll(<span class="string">"path"</span>)</div><div class="line">        .data(groups)</div><div class="line">        .enter()</div><div class="line">        .append(<span class="string">"path"</span>)</div><div class="line">        .style(<span class="string">"fill"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> color20(d.index);</div><div class="line">        &#125;)</div><div class="line">        .style(<span class="string">"stroke"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">            color20(d.index);</div><div class="line">        &#125;)</div><div class="line">        .attr(<span class="string">"d"</span>,outer_arc)   <span class="comment">// 此处调用了弧生成器</span></div><div class="line">        ;</div><div class="line"><span class="comment">// 节点文字</span></div><div class="line">g_outer.selectAll(<span class="string">"text"</span>)</div><div class="line">        .data(groups)</div><div class="line">        .enter()</div><div class="line">        .append(<span class="string">"text"</span>)</div><div class="line">        .each(<span class="function"><span class="keyword">function</span>(<span class="params">d,i</span>) </span>&#123;   <span class="comment">// 对每个绑定的数据添加两个变量</span></div><div class="line">            d.angle = (d.startAngle +　d.endAngle) / <span class="number">2</span>;</div><div class="line">            d.name = city_name[i];</div><div class="line">        &#125;)</div><div class="line">        .attr(<span class="string">"dy"</span>,<span class="string">".35em"</span>)</div><div class="line">        .attr(<span class="string">'transform'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;    <span class="comment">// 平移属性</span></div><div class="line">            <span class="keyword">var</span> result =  <span class="string">"rotate("</span> +　(d.angle*<span class="number">180</span>/<span class="built_in">Math</span>.PI) + <span class="string">")"</span>;</div><div class="line">            result += <span class="string">"translate(0,"</span> + <span class="number">-1</span> * (outerRadius + <span class="number">10</span>) + <span class="string">")"</span>;</div><div class="line">            <span class="keyword">if</span> (d.angle &gt; <span class="built_in">Math</span>.PI * <span class="number">3</span> / <span class="number">4</span> &amp;&amp; d.angle &lt; <span class="built_in">Math</span>.PI * <span class="number">5</span> / <span class="number">4</span> )</div><div class="line">                result += <span class="string">"rotate(180)"</span>;</div><div class="line">            <span class="keyword">return</span> result;</div><div class="line">        &#125;)</div><div class="line">        .text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> d.name;</div><div class="line">        &#125;);</div></pre></td></tr></table></figure>
<p>在标记文字的地方要注意：</p>
<ol>
<li>each()：表示对任何一个绑定数据的元素，都执行后面的无名函数 function(d,i) ，计算文字的角度与内容</li>
<li>transform()：不仅需要考虑文字的旋转角度与平移距离，还要考虑如果文字在下方是会是倒写的情况。</li>
</ol>
<p>生成如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4762054-7585d7f93ebecf84.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="绘制连线（弦）"><a href="#绘制连线（弦）" class="headerlink" title="绘制连线（弦）"></a>绘制连线（弦）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 弦生成器</span></div><div class="line"><span class="keyword">var</span> inner_chord = d3.svg.chord()</div><div class="line">                        .radius(innerRadius);</div><div class="line"></div><div class="line"><span class="comment">// 绘制内部弦</span></div><div class="line"><span class="keyword">var</span> g_inner = svg.append(<span class="string">"g"</span>)</div><div class="line">                .attr(<span class="string">"class"</span>,<span class="string">"chord"</span>);</div><div class="line"></div><div class="line">g_inner.selectAll(<span class="string">"path"</span>)</div><div class="line">        .data(chords)</div><div class="line">        .enter()</div><div class="line">        .append(<span class="string">"path"</span>)</div><div class="line">        .attr(<span class="string">"d"</span>,inner_chord)  <span class="comment">// 调用弦的路径值</span></div><div class="line">        .style(<span class="string">"fill"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> color20(d.source.index);</div><div class="line">        &#125;)</div><div class="line">        .style(<span class="string">"opacity"</span>,<span class="number">1</span>)</div><div class="line">        ;</div></pre></td></tr></table></figure>
<p>这样就生成了首页的弦图，但是当数据多了之后，会看不清节点与节点之间的关系，我们可以添加一些交互式的操作解决。如当鼠标移到该节点，只会显示与该节点相接的弦，其他的会被隐藏。这里我们定义一个fade函数，并在节点（弧）上通过<code>mouseover</code>与<code>mouseout</code>添加动作<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fade</span>(<span class="params">opacity</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">g,i</span>)</span>&#123;</div><div class="line">        g_inner.selectAll(<span class="string">"path"</span>)</div><div class="line">                .filter(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">                    <span class="keyword">return</span> d.source.index != i &amp;&amp; d.target.index != i;</div><div class="line">                &#125;)</div><div class="line">                .transition()</div><div class="line">                .style(<span class="string">"opacity"</span>,opacity);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">g_outer.selectAll(<span class="string">"path"</span>)</div><div class="line">        .on(<span class="string">"mouseover"</span>,fade(<span class="number">0.0</span>))  <span class="comment">// 0.0完全透明</span></div><div class="line">        .on(<span class="string">"mouseout"</span>,fade(<span class="number">1.0</span>))   <span class="comment">// 1.0完全不透明</span></div><div class="line">        ;</div></pre></td></tr></table></figure></p>
<p>效果如图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4762054-c05549c04d8b0c4a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="「源代码」"><a href="#「源代码」" class="headerlink" title="「源代码」"></a>「源代码」</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://d3js.org/d3.v3.min.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">            <span class="selector-class">.chord</span> <span class="selector-tag">path</span>&#123;</div><div class="line">                <span class="attribute">fill-opacity</span>: <span class="number">0.67</span>;</div><div class="line">                <span class="attribute">stroke</span>: <span class="number">#000</span>;</div><div class="line">                <span class="attribute">stroke-width</span>: <span class="number">0.5px</span>;</div><div class="line">            &#125;</div><div class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">        <span class="comment">// 初始数据</span></div><div class="line">        <span class="keyword">var</span> city_name = [ <span class="string">"北京"</span> , <span class="string">"上海"</span> , <span class="string">"广州"</span> , <span class="string">"深圳"</span> , <span class="string">"香港"</span>  ];</div><div class="line">        <span class="keyword">var</span> population = [</div><div class="line">                  [ <span class="number">1000</span>,  <span class="number">3045</span> , <span class="number">4567</span> , <span class="number">1234</span> , <span class="number">3714</span> ],</div><div class="line">                  [ <span class="number">3214</span>,  <span class="number">2000</span> , <span class="number">2060</span> , <span class="number">124</span>  , <span class="number">3234</span> ],</div><div class="line">                  [ <span class="number">8761</span>,  <span class="number">6545</span> , <span class="number">3000</span> , <span class="number">8045</span> , <span class="number">647</span>  ],</div><div class="line">                  [ <span class="number">3211</span>,  <span class="number">1067</span> , <span class="number">3214</span> , <span class="number">4000</span> , <span class="number">1006</span> ],</div><div class="line">                  [ <span class="number">2146</span>,  <span class="number">1034</span> , <span class="number">6745</span> , <span class="number">4764</span> , <span class="number">5000</span> ]</div><div class="line">                ];</div><div class="line"></div><div class="line">        <span class="comment">// 弦布局</span></div><div class="line">        <span class="keyword">var</span> chord_layout = d3.layout.chord()</div><div class="line">                                .padding(<span class="number">0.03</span>)</div><div class="line">                                .sortSubgroups(d3.descending)</div><div class="line">                                .matrix(population);</div><div class="line"></div><div class="line">        <span class="comment">// 布局转化数据</span></div><div class="line">        <span class="keyword">var</span> groups = chord_layout.groups();</div><div class="line">        <span class="keyword">var</span> chords = chord_layout.chords();</div><div class="line">        <span class="built_in">console</span>.log(groups);</div><div class="line">        <span class="built_in">console</span>.log(chords);</div><div class="line"></div><div class="line">        <span class="comment">// svg画布</span></div><div class="line">        <span class="keyword">var</span> width = <span class="number">600</span>;</div><div class="line">        <span class="keyword">var</span> height = <span class="number">600</span>;</div><div class="line">        <span class="keyword">var</span> svg = d3.select(<span class="string">"body"</span>)</div><div class="line">                    .append(<span class="string">"svg"</span>)</div><div class="line">                    .attr(<span class="string">"width"</span>,width)</div><div class="line">                    .attr(<span class="string">'height'</span>, height)</div><div class="line">                    .append(<span class="string">"g"</span>)</div><div class="line">                    .attr(<span class="string">'transform'</span>, <span class="string">'translate('</span> + width/<span class="number">2</span> + <span class="string">","</span> + height/<span class="number">2</span> + <span class="string">")"</span>);</div><div class="line"></div><div class="line">        <span class="keyword">var</span> color20 = d3.scale.category20();</div><div class="line"></div><div class="line">        <span class="comment">// 弧生成器</span></div><div class="line">        <span class="keyword">var</span> innerRadius = width/<span class="number">2</span> * <span class="number">0.7</span>;</div><div class="line">        <span class="keyword">var</span> outerRadius = innerRadius * <span class="number">1.1</span>;</div><div class="line">        <span class="keyword">var</span> outer_arc = d3.svg.arc()</div><div class="line">                            .innerRadius(innerRadius)</div><div class="line">                            .outerRadius(outerRadius);</div><div class="line"></div><div class="line">        <span class="comment">// 绘制节点</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fade</span>(<span class="params">opacity</span>)</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">g,i</span>)</span>&#123;</div><div class="line">                g_inner.selectAll(<span class="string">"path"</span>)</div><div class="line">                        .filter(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">                            <span class="keyword">return</span> d.source.index != i &amp;&amp; d.target.index != i;</div><div class="line">                        &#125;)</div><div class="line">                        .transition()</div><div class="line">                        .style(<span class="string">"opacity"</span>,opacity);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> g_outer = svg.append(<span class="string">"g"</span>);</div><div class="line">        g_outer.selectAll(<span class="string">"path"</span>)</div><div class="line">                .data(groups)</div><div class="line">                .enter()</div><div class="line">                .append(<span class="string">"path"</span>)</div><div class="line">                .style(<span class="string">"fill"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">                    <span class="keyword">return</span> color20(d.index);</div><div class="line">                &#125;)</div><div class="line">                .style(<span class="string">"stroke"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">                    color20(d.index);</div><div class="line">                &#125;)</div><div class="line">                .attr(<span class="string">"d"</span>,outer_arc)   <span class="comment">// 此处调用了弧生成器</span></div><div class="line">                .on(<span class="string">"mouseover"</span>,fade(<span class="number">0.0</span>))  <span class="comment">// 0.0完全透明</span></div><div class="line">                .on(<span class="string">"mouseout"</span>,fade(<span class="number">1.0</span>))   <span class="comment">// 1.0完全不透明</span></div><div class="line">                ;</div><div class="line"></div><div class="line">        g_outer.selectAll(<span class="string">"text"</span>)</div><div class="line">                .data(groups)</div><div class="line">                .enter()</div><div class="line">                .append(<span class="string">"text"</span>)</div><div class="line">                .each(<span class="function"><span class="keyword">function</span>(<span class="params">d,i</span>) </span>&#123;   <span class="comment">// 对每个绑定的数据添加两个变量</span></div><div class="line">                    d.angle = (d.startAngle +　d.endAngle) / <span class="number">2</span>;</div><div class="line">                    d.name = city_name[i];</div><div class="line">                &#125;)</div><div class="line">                .attr(<span class="string">"dy"</span>,<span class="string">".35em"</span>)</div><div class="line">                .attr(<span class="string">'transform'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;    <span class="comment">// 平移属性</span></div><div class="line">                    <span class="keyword">var</span> result =  <span class="string">"rotate("</span> +　(d.angle*<span class="number">180</span>/<span class="built_in">Math</span>.PI) + <span class="string">")"</span>;</div><div class="line">                    result += <span class="string">"translate(0,"</span> + <span class="number">-1</span> * (outerRadius + <span class="number">10</span>) + <span class="string">")"</span>;</div><div class="line">                    <span class="keyword">if</span> (d.angle &gt; <span class="built_in">Math</span>.PI * <span class="number">3</span> / <span class="number">4</span> &amp;&amp; d.angle &lt; <span class="built_in">Math</span>.PI * <span class="number">5</span> / <span class="number">4</span> )</div><div class="line">                        result += <span class="string">"rotate(180)"</span>;</div><div class="line">                    <span class="keyword">return</span> result;</div><div class="line">                &#125;)</div><div class="line">                .text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">                    <span class="keyword">return</span> d.name;</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">        <span class="comment">// 弦生成器</span></div><div class="line">        <span class="keyword">var</span> inner_chord = d3.svg.chord()</div><div class="line">                                .radius(innerRadius);</div><div class="line"></div><div class="line">        <span class="comment">// 绘制内部弦,一共有5*5=25条</span></div><div class="line">        <span class="keyword">var</span> g_inner = svg.append(<span class="string">"g"</span>)</div><div class="line">                        .attr(<span class="string">"class"</span>,<span class="string">"chord"</span>);</div><div class="line"></div><div class="line">        g_inner.selectAll(<span class="string">"path"</span>)</div><div class="line">                .data(chords)</div><div class="line">                .enter()</div><div class="line">                .append(<span class="string">"path"</span>)</div><div class="line">                .attr(<span class="string">"d"</span>,inner_chord)  <span class="comment">// 调用弦的路径值</span></div><div class="line">                .style(<span class="string">"fill"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">                    <span class="keyword">return</span> color20(d.source.index);</div><div class="line">                &#125;)</div><div class="line">                .style(<span class="string">"opacity"</span>,<span class="number">1</span>)</div><div class="line">                ;</div><div class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> D3.js </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> D3.js </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[D3学习系列（一） 基础知识与柱形图绘制]]></title>
      <url>JuniorNi.github.io/2017/03/25/D3%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%8E%E6%9F%B1%E5%BD%A2%E5%9B%BE%E7%BB%98%E5%88%B6/</url>
      <content type="html"><![CDATA[<h1 id="「前言」"><a href="#「前言」" class="headerlink" title="「前言」"></a>「前言」</h1><p>最开始的初衷是想画个弦图（chord）与桑基图（sankey），真的很炫有没有！然而D3零基础的我表示源码看不懂，受到1万点暴击(<em>+﹏+</em>)~  于是果断去恶补D3的基础知识，并加以整理同时加深对自己的印象。</p>
<a id="more"></a>
<h1 id="「基础概念」"><a href="#「基础概念」" class="headerlink" title="「基础概念」"></a>「基础概念」</h1><p><strong>选择集</strong><br>使用 d3.select() 或 d3.selectAll() 选择元素后返回的对象，就是选择集</p>
<p><strong>无名函数</strong><br>function(d, i) 这个函数以后经常要使用到</p>
<ul>
<li>d 代表数据，也就是与某元素绑定的数据。</li>
<li>i 代表索引，代表数据的索引号，从 0 开始。</li>
</ul>
<h1 id="「数据绑定」"><a href="#「数据绑定」" class="headerlink" title="「数据绑定」"></a>「数据绑定」</h1><p>D3可以用两种函数来绑定数据：</p>
<ul>
<li><strong>datum()：</strong> 绑定一个数据到选择集上，这里的数据并非一定要是number（数值型），也可以是string（字符串）、bollean（布尔型）和object（对象）</li>
<li><strong>data()：</strong> 绑定一个数组到选择集上，数组的各项值分别与选择集的各元素绑定，<strong>更常用</strong></li>
</ul>
<p>data() 函数的常用语法<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> dataset = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>];</div><div class="line"><span class="keyword">var</span> body = d3.select(<span class="string">"body"</span>);</div><div class="line"></div><div class="line">body.selectAll(<span class="string">"p"</span>)  <span class="comment">//选择body中的所有p，但是目前还没有，所以是空集</span></div><div class="line">	.data(dataset)  <span class="comment">//绑定数组</span></div><div class="line">	.enter()  <span class="comment">//指定选择集的enter部分</span></div><div class="line">	.append(<span class="string">"p"</span>)</div><div class="line">	.text(<span class="function"><span class="keyword">function</span><span class="params">(d)</span></span>&#123; </div><div class="line">		<span class="keyword">return</span> d; </div><div class="line">	&#125;)</div></pre></td></tr></table></figure></p>
<p>这里要解释下 Enter 的概念，它与Update、Exit是D3中三个非常重要的概念，处理的是当选择集和数据的数量关系不确定的情况。</p>
<p>如果数组为 [3, 6, 9, 12, 15]，将此数组绑定到三个 p 元素的选择集上。可以想象，会有两个数据没有元素与之对应，这时候 D3 会建立两个空的元素与数据对应，这一部分就称为 Enter。而有元素与数据对应的部分称为 Update。如果数组为 [3]，则会有两个元素没有数据绑定，那么没有数据绑定的部分被称为 Exit。示意图如下所示。<br><img src="http://upload-images.jianshu.io/upload_images/4762054-45174e72ed043a8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="「柱形图」"><a href="#「柱形图」" class="headerlink" title="「柱形图」"></a>「柱形图」</h1><p><strong>Bar Chart一般包括：矩形、坐标轴与文字。</strong></p>
<h2 id="矩形"><a href="#矩形" class="headerlink" title="矩形"></a>矩形</h2><p>这里我们直接定义一个数组，用数组项对应矩形的长短（然而这种方法并不理想）。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> dataset = [<span class="number">50</span>, <span class="number">43</span>, <span class="number">120</span>, <span class="number">87</span>, <span class="number">99</span>, <span class="number">167</span>, <span class="number">142</span>];</div></pre></td></tr></table></figure></p>
<p>定义一块SVG的绘制区域：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> width = <span class="number">600</span>;	<span class="comment">// SVG的宽度</span></div><div class="line"><span class="keyword">var</span> height = <span class="number">600</span>;	<span class="comment">// SVG的长度</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> svg = d3.select(<span class="string">"body"</span>)</div><div class="line">            .append(<span class="string">'svg'</span>)	<span class="comment">// body中添加SVG</span></div><div class="line">            .attr(<span class="string">'width'</span>, width)</div><div class="line">            .attr(<span class="string">'height'</span>, height);</div></pre></td></tr></table></figure></p>
<p>定义三个我们要用的变量<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> padding = &#123;<span class="attr">top</span>: <span class="number">20</span>, <span class="attr">right</span>: <span class="number">20</span>, <span class="attr">bottom</span>: <span class="number">20</span>, <span class="attr">left</span>: <span class="number">20</span>&#125;;</div><div class="line"><span class="keyword">var</span> rectStep = <span class="number">35</span>;</div><div class="line"><span class="keyword">var</span> rectWidth = <span class="number">30</span>;</div></pre></td></tr></table></figure></p>
<p>padding是svg内的最外一层区域，留一段空白宽度是为了防止图形绘制带svg区域外。rectStep表示前一个矩形到下一个矩形的距离（包括空白间隔），而rectWidth是矩形实际的宽度。说了这么多还是看图更易懂：<br><img src="http://upload-images.jianshu.io/upload_images/4762054-93e0f16104bc5545.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>添加矩形元素<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> rect = svg.selectAll(<span class="string">"rect"</span>)</div><div class="line">              .data(dataset)</div><div class="line">              .enter()  <span class="comment">//获取enter部分</span></div><div class="line">              .append(<span class="string">"rect"</span>)	<span class="comment">//添加rect元素，使其与绑定数组的长度一致</span></div><div class="line">              .attr(<span class="string">"fill"</span>,<span class="string">"steelblue"</span>)</div><div class="line">              .attr(<span class="string">"x"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d,i</span>)</span>&#123;	<span class="comment">//设置X坐标</span></div><div class="line">                  <span class="keyword">return</span> padding.left + i * rectStep;</div><div class="line">              &#125;)</div><div class="line">              .attr(<span class="string">"y"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d,i</span>)</span>&#123;	<span class="comment">//设置Y坐标</span></div><div class="line">                  <span class="keyword">return</span> height - padding.bottom - d;</div><div class="line">              &#125;)</div><div class="line">              .attr(<span class="string">"width"</span>,rectWidth)	<span class="comment">//设置矩形宽度，之前定义的</span></div><div class="line">              .attr(<span class="string">"height"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;	<span class="comment">//设置矩形高度，即为数组中的各项值</span></div><div class="line">                  <span class="keyword">return</span> d</div><div class="line">              &#125;);</div></pre></td></tr></table></figure></p>
<p>因为数组dataset的长度为7，所以最后生成7个矩形。x与y坐标是矩形的<strong>左上角顶点</strong>。 这个坐标是相对应svg绘图区域来讲的，坐标原点位于左上角(0,0)。</p>
<p>一张图直接说明：<br><img src="http://upload-images.jianshu.io/upload_images/4762054-cf20c0197612b953.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="标签文字"><a href="#标签文字" class="headerlink" title="标签文字"></a>标签文字</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> text = svg.selectAll(text)</div><div class="line">                .data(dataset)</div><div class="line">                .enter()</div><div class="line">                .append(<span class="string">"text"</span>)</div><div class="line">                .attr(<span class="string">"fill"</span>,<span class="string">"white"</span>)</div><div class="line">                .attr(<span class="string">"font-size"</span>,<span class="string">"14px"</span>)</div><div class="line">                .attr(<span class="string">"text-anchor"</span>,<span class="string">"middle"</span>)</div><div class="line">                .attr(<span class="string">"x"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d,i</span>)</span>&#123;	<span class="comment">//与矩形的X坐标一样</span></div><div class="line">                    <span class="keyword">return</span> padding.left + i * rectStep;</div><div class="line">                &#125;)</div><div class="line">                .attr(<span class="string">"y"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">                    <span class="keyword">return</span> height - padding.bottom - d;</div><div class="line">                &#125;)</div><div class="line">                .attr(<span class="string">'dx'</span>, rectWidth/<span class="number">2</span>)	<span class="comment">//x轴相对平移距离</span></div><div class="line">                .attr(<span class="string">'dy'</span>, <span class="string">"1em"</span>)	<span class="comment">//em单位表示的是当前文字所占一行的高度</span></div><div class="line">                .text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;	<span class="comment">//要显示的文字内容</span></div><div class="line">                    <span class="keyword">return</span> d;	</div><div class="line">                &#125;);</div></pre></td></tr></table></figure>
<p>添加文字标签的方法与添加矩形元素方法相类似，不过颜色要与矩形的颜色区分。通过设置元素的text-anchor、x、y、dx与dy五个属性，让文字显示在每个矩形的<strong>正中心</strong>。</p>
<p>其中dx,dy表示相对(x,y)平移的大小，所以文本会从(x+dx,y+dy)位置开始显示，这个位置也叫<em><u>起始位置</u></em>。<br>属性text-anchor有三个值：start、middle、end,，这里用middle表示文字中心位于<em><u>起始位置</u></em>上。</p>
<p>还是上图说明问题：<br><img src="http://upload-images.jianshu.io/upload_images/4762054-42d5fac07d1143e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>效果图：<br><img src="http://upload-images.jianshu.io/upload_images/4762054-cb0e1d5c9e8233c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="坐标轴"><a href="#坐标轴" class="headerlink" title="坐标轴"></a>坐标轴</h2><p>坐标轴的主直线由path构成，刻度由line绘制，刻度文字用text完成。之前我们直接用数值的大小来表示像素的大小，这里我们使用<strong>比例尺</strong>，定义如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// SVG画布</span></div><div class="line"><span class="keyword">var</span> width = <span class="number">600</span>;</div><div class="line"><span class="keyword">var</span> height = <span class="number">600</span>;</div><div class="line"><span class="keyword">var</span> svg = d3.select(<span class="string">"body"</span>).append(<span class="string">'svg'</span>)</div><div class="line">            .attr(<span class="string">'width'</span>, width)</div><div class="line">            .attr(<span class="string">'height'</span>, height);</div><div class="line"></div><div class="line"><span class="comment">// 坐标轴的线性比例尺</span></div><div class="line"><span class="keyword">var</span> xScale = d3.scale.linear()</div><div class="line">                .domain([<span class="number">0</span>,<span class="number">10</span>])	<span class="comment">//定义域</span></div><div class="line">                .range([<span class="number">0</span>,<span class="number">300</span>]);	<span class="comment">//值域</span></div><div class="line"></div><div class="line"><span class="comment">// 定义坐标轴</span></div><div class="line"><span class="keyword">var</span> axis = d3.svg.axis()</div><div class="line">            .scale(xScale)</div><div class="line">            .orient(<span class="string">"bottom"</span>)</div><div class="line">            .ticks(<span class="number">5</span>);	<span class="comment">//刻度的数量，这里显示5个</span></div><div class="line"></div><div class="line"><span class="comment">//在 SVG 中添加一个分组元素，再将坐标轴的其他元素添加到里面</span></div><div class="line"><span class="keyword">var</span> gAxis = svg.append(<span class="string">"g"</span>)</div><div class="line">                .attr(<span class="string">"transform"</span>,<span class="string">"translate(80,80)"</span>);</div><div class="line">                .call(axis)</div><div class="line"></div><div class="line">gAxis.attr(<span class="string">'class'</span>, <span class="string">'axis'</span>);	<span class="comment">//添加一些样式，否则太太太丑了...</span></div></pre></td></tr></table></figure></p>
<p>call()函数的使用十分常见，这里使用的参数是前面定义的坐标轴axis，等价于<code>axis(gAxis);</code>的形式。效果图如下：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4762054-638001ef464c5cf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png">  </p>
<h1 id="「柱形图的坐标轴」"><a href="#「柱形图的坐标轴」" class="headerlink" title="「柱形图的坐标轴」"></a>「柱形图的坐标轴」</h1><p>对初学者而言，这里的坑更多（老司机请无视）。主要是因为使用了比例尺之后，XY坐标轴、矩形长宽、刻度都要与之相对应。<em>不要问我为什么知道这么多，都是泪……</em></p>
<p><strong>为矩形图定义比例尺</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xAxisWidth = <span class="number">300</span>;	<span class="comment">//x轴宽度</span></div><div class="line"><span class="keyword">var</span> yAxisWidth = <span class="number">300</span>;	<span class="comment">//y轴宽度</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> xScale = d3.scale.ordinal()	<span class="comment">//x轴比例尺（序数比例尺）</span></div><div class="line">                .domain(d3.range(dataset.length))</div><div class="line">                .rangeRoundBands([<span class="number">0</span>,xAxisWidth],<span class="number">0.2</span>);</div><div class="line"><span class="keyword">var</span> yScale = d3.scale.linear()	<span class="comment">//y轴比例尺（线性比例尺）</span></div><div class="line">                .domain([<span class="number">0</span>,d3.max(dataset)])</div><div class="line">                .range([<span class="number">0</span>,yAxisWidth]);</div></pre></td></tr></table></figure></p>
<p>定义完比例尺之后，矩形的高度、位置都要用比例尺来计算。如此之后，仅需简单修改比例尺，图表就能自动伸缩，所以前面的<em><u>矩形元素</u></em>与<em><u>矩形文字</u></em>的代码都需要修改</p>
<p><strong>矩形元素修改部分</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">.attr(<span class="string">"x"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d,i</span>)</span>&#123;	</div><div class="line">    <span class="keyword">return</span> padding.left + xScale(i);	<span class="comment">// return padding.left + i * rectStep;</span></div><div class="line">&#125;)</div><div class="line">.attr(<span class="string">"y"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d,i</span>)</span>&#123;	</div><div class="line">    <span class="keyword">return</span> height - padding.bottom - yScale(d);	<span class="comment">// return height - padding.bottom - d;</span></div><div class="line">&#125;)</div><div class="line">.attr(<span class="string">"width"</span>,xScale.rangeBand()) </div><div class="line">.attr(<span class="string">"height"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> yScale(d);</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p><strong>标签文字修改部分</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">.attr(<span class="string">"x"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d,i</span>)</span>&#123;	<span class="comment">//与矩形的X坐标一样</span></div><div class="line">    <span class="keyword">return</span> padding.left + xScale(i);</div><div class="line">&#125;)</div><div class="line">.attr(<span class="string">"y"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> height - padding.bottom - yScale(d);</div><div class="line">&#125;)</div><div class="line">.attr(<span class="string">'dx'</span>, xScale.rangeBand()/<span class="number">2</span>)	<span class="comment">//x轴相对平移距离</span></div><div class="line">.attr(<span class="string">'dy'</span>, <span class="string">"1em"</span>)	<span class="comment">//em单位表示的是当前文字所占一行的高度</span></div><div class="line">.text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;	<span class="comment">//要显示的文字内容</span></div><div class="line">    <span class="keyword">return</span> d;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p><strong>定义坐标轴</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xAxis = d3.svg.axis()</div><div class="line">            .scale(xScale)</div><div class="line">            .orient(<span class="string">"bottom"</span>);</div><div class="line"></div><div class="line">yScale.range([yAxisWidth,<span class="number">0</span>]);	<span class="comment">//值域相反</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> yAxis = d3.svg.axis()</div><div class="line">            .scale(yScale)</div><div class="line">            .orient(<span class="string">"left"</span>);</div></pre></td></tr></table></figure></p>
<p>此外还要注意，y轴坐标的值域要与原来<strong>相反</strong>，从最大值到最小值，否则最后会出现下面这种情况：<br><img src="http://upload-images.jianshu.io/upload_images/4762054-04b43eb28412b558.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" style="width: 35px;"></p>
<p><strong>添加坐标轴元素</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//添加x轴</span></div><div class="line">svg.append(<span class="string">"g"</span>)	</div><div class="line">	.attr(<span class="string">"class"</span>,<span class="string">"axis"</span>)</div><div class="line">	.attr(<span class="string">"transform"</span>,<span class="string">"translate("</span> + padding.left + <span class="string">","</span> + (height - padding.bottom) + <span class="string">")"</span>)</div><div class="line">	.call(xAxis);</div><div class="line"></div><div class="line"><span class="comment">//添加y轴</span></div><div class="line">svg.append(<span class="string">"g"</span>)</div><div class="line">	.attr(<span class="string">"class"</span>,<span class="string">"axis"</span>)</div><div class="line">	.attr(<span class="string">"transform"</span>,<span class="string">"translate("</span> + padding.left + <span class="string">","</span> + (height - padding.bottom - yAxisWidth) + <span class="string">")"</span>)</div><div class="line">	.call(yAxis);</div></pre></td></tr></table></figure></p>
<p>这里要小心x轴、y轴平移到目标位置的距离，以及你设置padding前后左右的宽度，防止坐标轴跑到外面去（又是血与泪的教训）。</p>
<p>最后效果图：<br><img src="http://upload-images.jianshu.io/upload_images/4762054-6fbc5940b5a6d009.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><strong>完整源代码</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://d3js.org/d3.v3.min.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">            <span class="selector-class">.axis</span> <span class="selector-tag">path</span>,</div><div class="line">            <span class="selector-class">.axis</span> <span class="selector-tag">line</span>&#123;</div><div class="line">                <span class="attribute">fill</span>: none;</div><div class="line">                <span class="attribute">stroke</span>: black;</div><div class="line">                <span class="attribute">shape-rendering</span>: crispEdges;</div><div class="line">            &#125;</div><div class="line">            <span class="selector-class">.axis</span> <span class="selector-tag">text</span>&#123;</div><div class="line">                <span class="attribute">font-family</span>: sans-serif;</div><div class="line">                <span class="attribute">font-size</span>: <span class="number">11px</span>;</div><div class="line">            &#125;</div><div class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="actionscript"></span></div><div class="line">            <span class="comment">// 添加SVG画布</span></div><div class="line">            <span class="keyword">var</span> dataset = [<span class="number">50</span>, <span class="number">43</span>, <span class="number">120</span>, <span class="number">87</span>, <span class="number">99</span>, <span class="number">167</span>, <span class="number">142</span>];</div><div class="line">            <span class="keyword">var</span> width = <span class="number">600</span>;	<span class="comment">// SVG的宽度</span></div><div class="line">            <span class="keyword">var</span> height = <span class="number">600</span>;	<span class="comment">// SVG的长度</span></div><div class="line">            <span class="keyword">var</span> svg = d3.select(<span class="string">"body"</span>)</div><div class="line">                        .append(<span class="string">'svg'</span>)	<span class="comment">// body中添加SVG</span></div><div class="line">                        .attr(<span class="string">'width'</span>, width)</div><div class="line">                        .attr(<span class="string">'height'</span>, height);</div><div class="line">            <span class="keyword">var</span> padding = &#123;top: <span class="number">20</span>, right: <span class="number">20</span>, bottom: <span class="number">20</span>, left: <span class="number">30</span>&#125;;</div><div class="line"></div><div class="line">            <span class="comment">// 定义数据与比例尺</span></div><div class="line">            <span class="keyword">var</span> xAxisWidth = <span class="number">300</span>;	<span class="comment">//x轴宽度</span></div><div class="line">            <span class="keyword">var</span> yAxisWidth = <span class="number">300</span>;	<span class="comment">//y轴宽度</span></div><div class="line">            <span class="keyword">var</span> xScale = d3.scale.ordinal()	<span class="comment">//x轴比例尺（序数比例尺）</span></div><div class="line">                            .domain(d3.range(dataset.length))</div><div class="line">                            .rangeRoundBands([<span class="number">0</span>,xAxisWidth],<span class="number">0.2</span>);</div><div class="line">            <span class="keyword">var</span> yScale = d3.scale.linear()	<span class="comment">//y轴比例尺（线性比例尺）</span></div><div class="line">                            .domain([<span class="number">0</span>,d3.max(dataset)])</div><div class="line">                            .range([<span class="number">0</span>,yAxisWidth]);</div><div class="line"></div><div class="line">            <span class="comment">// 添加矩形和文字元素</span></div><div class="line">            <span class="keyword">var</span> rect = svg.selectAll(<span class="string">"rect"</span>)</div><div class="line">                            .data(dataset)</div><div class="line">                            .enter()  <span class="comment">//获取enter部分</span></div><div class="line">                            .append(<span class="string">"rect"</span>)	<span class="comment">//添加rect元素，使其与绑定数组的长度一致</span></div><div class="line">                            .attr(<span class="string">"fill"</span>,<span class="string">"steelblue"</span>)</div><div class="line">                            .attr(<span class="string">"x"</span>,<span class="function"><span class="keyword">function</span><span class="params">(d,i)</span></span>&#123;	<span class="comment">//设置X坐标</span></div><div class="line">                                <span class="comment">// return padding.left + i * rectStep;</span></div><div class="line">                                <span class="keyword">return</span> padding.left + xScale(i);</div><div class="line"></div><div class="line">                            &#125;)</div><div class="line">                            .attr(<span class="string">"y"</span>,<span class="function"><span class="keyword">function</span><span class="params">(d,i)</span></span>&#123;	<span class="comment">//设置Y坐标</span></div><div class="line">                                <span class="comment">// return height - padding.bottom - d;</span></div><div class="line">                                <span class="keyword">return</span> height - padding.bottom - yScale(d);</div><div class="line">                            &#125;)</div><div class="line">                            .attr(<span class="string">"width"</span>,xScale.rangeBand())    <span class="comment">//设置矩形宽度</span></div><div class="line">                            .attr(<span class="string">"height"</span>,<span class="function"><span class="keyword">function</span><span class="params">(d)</span></span>&#123;</div><div class="line">                                <span class="keyword">return</span> yScale(d);</div><div class="line">                            &#125;)</div><div class="line">            <span class="keyword">var</span> text = svg.selectAll(text)</div><div class="line">                            .data(dataset)</div><div class="line">                            .enter()</div><div class="line">                            .append(<span class="string">"text"</span>)</div><div class="line">                            .attr(<span class="string">"fill"</span>,<span class="string">"white"</span>)</div><div class="line">                            .attr(<span class="string">"font-size"</span>,<span class="string">"14px"</span>)</div><div class="line">                            .attr(<span class="string">"text-anchor"</span>,<span class="string">"middle"</span>)</div><div class="line">                            .attr(<span class="string">"x"</span>,<span class="function"><span class="keyword">function</span><span class="params">(d,i)</span></span>&#123;	<span class="comment">//与矩形的X坐标一样</span></div><div class="line">                                <span class="keyword">return</span> padding.left + xScale(i);</div><div class="line">                            &#125;)</div><div class="line">                            .attr(<span class="string">"y"</span>,<span class="function"><span class="keyword">function</span><span class="params">(d)</span></span>&#123;</div><div class="line">                                <span class="keyword">return</span> height - padding.bottom - yScale(d);</div><div class="line">                            &#125;)</div><div class="line">                            .attr(<span class="string">'dx'</span>, xScale.rangeBand()/<span class="number">2</span>)	<span class="comment">//x轴相对平移距离</span></div><div class="line">                            .attr(<span class="string">'dy'</span>, <span class="string">"1em"</span>)	<span class="comment">//em单位表示的是当前文字所占一行的高度</span></div><div class="line">                            .text(<span class="function"><span class="keyword">function</span><span class="params">(d)</span></span>&#123;	<span class="comment">//要显示的文字内容</span></div><div class="line">                                <span class="keyword">return</span> d;</div><div class="line">                            &#125;);</div><div class="line"></div><div class="line">            <span class="comment">// 定义坐标轴</span></div><div class="line">            <span class="keyword">var</span> xAxis = d3.svg.axis()</div><div class="line">                        .scale(xScale)</div><div class="line">                        .orient(<span class="string">"bottom"</span>);</div><div class="line">            yScale.range([yAxisWidth,<span class="number">0</span>]);</div><div class="line">            <span class="keyword">var</span> yAxis = d3.svg.axis()</div><div class="line">                        .scale(yScale)</div><div class="line">                        .orient(<span class="string">"left"</span>);</div><div class="line">                        </div><div class="line">            <span class="comment">// 添加坐标轴</span></div><div class="line">            svg.append(<span class="string">"g"</span>)</div><div class="line">              .attr(<span class="string">"class"</span>,<span class="string">"axis"</span>)</div><div class="line">              .attr(<span class="string">"transform"</span>,<span class="string">"translate("</span> + padding.left + <span class="string">","</span> + (height - padding.bottom) + <span class="string">")"</span>)</div><div class="line">              .call(xAxis);</div><div class="line"></div><div class="line">            svg.append(<span class="string">"g"</span>)</div><div class="line">              .attr(<span class="string">"class"</span>,<span class="string">"axis"</span>)</div><div class="line">              .attr(<span class="string">"transform"</span>,<span class="string">"translate("</span> + padding.left + <span class="string">","</span> + (height - padding.bottom - yAxisWidth) + <span class="string">")"</span>)</div><div class="line">              .call(yAxis);</div><div class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h1 id="「参考资料」"><a href="#「参考资料」" class="headerlink" title="「参考资料」"></a>「参考资料」</h1><blockquote>
<p> <a href="http://d3.decembercafe.org/index.html" target="_blank" rel="external">【Learning D3.JS】</a><br> <a href="http://www.cnblogs.com/koto/p/5980646.html" target="_blank" rel="external">【D3.js：Update、Enter、Exit】</a><br> <a href="http://wiki.11ten.net/Tools/d3.js.html" target="_blank" rel="external">【D3.js - 初体验】</a><br> <a href="http://blog.csdn.net/zhang__tianxu/article/category/1623437/1" target="_blank" rel="external">【D3.js数据可视化系列教程】</a></p>
</blockquote>
<!-- - http://upload-images.jianshu.io/upload_images/4762054-01d82ecd4ac11abc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 -->
<!-- ![Sankey](http://upload-images.jianshu.io/upload_images/4762054-ae18d0fdf352e30a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) -->
<!-- ![Chord](http://ommtyfkn6.bkt.clouddn.com/chord.gif) -->]]></content>
      
        <categories>
            
            <category> D3.js </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> D3.js </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Semantic UI上手]]></title>
      <url>JuniorNi.github.io/2017/03/18/Semantic-UI%E4%B8%8A%E6%89%8B/</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4762054-abb3edf07ba4b920.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>最近使用<code>Semantic UI</code>这一CSS框架实现了上图的苹果静态官网首页，我只想说，要不要这么简单粗暴！它省去了你大量时间与经历，不必去重复造轮子。但如此的便利必然是付出了某种你还未发现的代价……</p>
<a id="more"></a>
<h1 id="Semantic-UI基础知识"><a href="#Semantic-UI基础知识" class="headerlink" title="Semantic UI基础知识"></a>Semantic UI基础知识</h1><p>我们要了解一些基本的样式与技巧，并能通过使用“形容词”来改变样式。</p>
<h2 id="【基本样式】"><a href="#【基本样式】" class="headerlink" title="【基本样式】"></a>【基本样式】</h2><p>首先，<code>header</code>中导入<code>semantic</code>样式，在<code>body</code>的<code>div</code>块中定义<code>class=“ui segment”</code>，基本效果如下<br><img src="http://upload-images.jianshu.io/upload_images/4762054-d931b46a42c7f283.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="【使用“形容词”】"><a href="#【使用“形容词”】" class="headerlink" title="【使用“形容词”】"></a>【使用“形容词”】</h2><p>其次，在<code>div class = &quot;XXX&quot;</code>中加上你想实现的“形容词”</p>
<ul>
<li>inverted + color</li>
<li>vertical</li>
<li>padded</li>
</ul>
<h3 id="inverted"><a href="#inverted" class="headerlink" title="inverted"></a>inverted</h3><p> 颜色反转，若不加颜色，则直接变成黑色，官网给出下面多种颜色选择<br><img src="http://upload-images.jianshu.io/upload_images/4762054-a3920b371c3a6230.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<h3 id="vertical"><a href="#vertical" class="headerlink" title="vertical"></a>vertical</h3><p>消除两边的圆角、阴影，同一<code>vertical</code>作用下的多个<code>segment</code>之间缝隙消失，<br><img src="http://upload-images.jianshu.io/upload_images/4762054-cedff6d05992d74a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<h3 id="padded"><a href="#padded" class="headerlink" title="padded"></a>padded</h3><p>改变内距</p>
<h1 id="Apple静态官网首页实现"><a href="#Apple静态官网首页实现" class="headerlink" title="Apple静态官网首页实现"></a>Apple静态官网首页实现</h1><p>了解了必要的知识之后，赶紧来实践一番！</p>
<h2 id="【导航菜单栏】"><a href="#【导航菜单栏】" class="headerlink" title="【导航菜单栏】"></a>【导航菜单栏】</h2><p><img src="http://upload-images.jianshu.io/upload_images/4762054-6475ff8105f883f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>使用<code>semantic</code>自带的<code>ui menu</code>样式，第一个与最后两个使用图标插入，其余的直接输文字，这里有几个小点需要注意：</p>
<ul>
<li>fixed：固定菜单栏，下拉拖动时表头不会消失，一直悬浮在最上面</li>
<li>fitted：大小宽度自适应</li>
<li>nine item：九个图标居中显示</li>
<li>borderless：去除图案之间的白色间隔线</li>
</ul>
<p><em><u>代码如下</u></em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui fixed fitted inverted borderless nine item menu"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images\appleicon.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Mac<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Music<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>技术支持<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images\searchicon.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images\buyicon.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="【iPhone7大图】"><a href="#【iPhone7大图】" class="headerlink" title="【iPhone7大图】"></a>【iPhone7大图】</h2><p><img src="http://upload-images.jianshu.io/upload_images/4762054-c44b29136d0ec9ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<p>使用<code>ui image</code>样式插入图片，其他注意点：</p>
<ul>
<li>basic：消除黑边</li>
<li>secondary：相当于下面的效果<br>  <img src="http://upload-images.jianshu.io/upload_images/4762054-b39d0c79e40c621b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br>  但是在这里可以从视觉效果上去除图片下的底色，否则会是下面这样，要多难看有多难看…<br>  <img src="http://upload-images.jianshu.io/upload_images/4762054-a75dab13eac754ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></li>
</ul>
<p><em><u>代码如下</u></em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui basic secondary vertical segment"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/banner.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="【四张小图】"><a href="#【四张小图】" class="headerlink" title="【四张小图】"></a>【四张小图】</h2><p><img src="http://upload-images.jianshu.io/upload_images/4762054-2477cad6f4d194d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><em><u>代码如下</u></em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui basic secondary vertical segment"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui fitted text menu"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img1.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img2.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img3.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img4.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="【最后文字】"><a href="#【最后文字】" class="headerlink" title="【最后文字】"></a>【最后文字】</h2><p><img src="http://upload-images.jianshu.io/upload_images/4762054-c46086dff62d64f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<p>使用嵌套制作网页<code>ui segment -&gt; ui container</code>，注意事项：</p>
<ul>
<li>very padded：内距变大</li>
<li>一条分割线：通过<code>&lt;div class=&quot;ui divider&quot;&gt;&lt;/div&gt;</code>方式“画出”一条分割线</li>
<li>grid：网格系统，使用<code>five column</code>分成五列</li>
<li>text menu：每段文字放在里面，且用<code>vertical</code>垂直排列</li>
</ul>
<p><em><u>代码如下</u></em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical secondary very padded segment"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui container"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sub header"</span>&gt;</span></div><div class="line">            双镜头摄像头仅于 iPhone 7 Plus 提供。亮黑色外观仅于 128GB 及以上存储容量的机型提供。</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui five column grid"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical text menu"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Apple Store 商店<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>查找零售店<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPod<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 段落重复4遍ing --&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>好了，最后把‘导航菜单栏’、‘iPhone7大图’、‘四张小图’与‘最后文字’四块部分拼接起来，就实现了苹果官网首页的效果，耶~</p>
<h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/semantic.css"</span> <span class="attr">media</span>=<span class="string">"screen"</span> <span class="attr">title</span>=<span class="string">"no title"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 导航栏 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui fixed fitted inverted borderless nine item menu"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images\appleicon.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Mac<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Music<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>技术支持<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images\searchicon.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images\buyicon.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 表头图片 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui basic secondary vertical segment"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/banner.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 四张图、 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui basic secondary vertical segment"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui fitted text menu"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img1.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img2.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img3.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img4.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 最后文字 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical secondary very padded segment"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui container"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sub header"</span>&gt;</span></div><div class="line">                    双镜头摄像头仅于 iPhone 7 Plus 提供。亮黑色外观仅于 128GB 及以上存储容量的机型提供。</div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="comment">&lt;!-- 文字重复中 --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui five column grid"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical text menu"</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Apple Store 商店<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>查找零售店<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPod<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical text menu"</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Apple Store 商店<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>查找零售店<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPod<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical text menu"</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Apple Store 商店<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>查找零售店<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPod<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical text menu"</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Apple Store 商店<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>查找零售店<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPod<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical text menu"</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Apple Store 商店<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>查找零售店<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPod<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<p><a href="https://semantic-ui.com/" target="_blank" rel="external">Semantic UI 官网</a><br><a href="http://www.semantic-ui.cn/introduction/getting-started.html" target="_blank" rel="external">Semantic UI 中文文档</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Web开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Web </tag>
            
            <tag> Css </tag>
            
            <tag> Semantic UI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何成为技术大牛]]></title>
      <url>JuniorNi.github.io/2017/03/15/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E6%8A%80%E6%9C%AF%E5%A4%A7%E7%89%9B/</url>
      <content type="html"><![CDATA[<p>前几日朋友分享了一篇“技术大牛养成指南”，看完之后有种豁然开朗的感觉，这也许和我最近的状态有关，最近一直没想通的问题似乎在这篇文章中也得到解决。作者通过目标拆解，用可实践的方法来指导大家如何在日常生活与工作中去运用。</p>
<a id="more"></a>
<h1 id="什么是1万小时理论"><a href="#什么是1万小时理论" class="headerlink" title="什么是1万小时理论"></a>什么是1万小时理论</h1><p>成为顶级专家的<strong>唯一</strong>方法就是1万小时持续不断地练习，意味着每天如果花3小时来提升自己的技能，需要10年…（不能包括你每天的重复性工作时间，要从专业广度与深度上不断扩展）</p>
<h1 id="如何找到1万小时"><a href="#如何找到1万小时" class="headerlink" title="如何找到1万小时"></a>如何找到1万小时</h1><ol>
<li>每天的起床前与睡前30分钟：你会感到每天平白无故比别人多了一、两个小时</li>
<li>利用或节省路途时间</li>
<li>周末4小时</li>
</ol>
<h1 id="如何坚持下去"><a href="#如何坚持下去" class="headerlink" title="如何坚持下去"></a>如何坚持下去</h1><ol>
<li>分解等级<ul>
<li>0~1年：菜鸟，需要手把手教</li>
<li>1~3年：初级，要别人带你</li>
<li>3~5年：高级，独挡一面，能带初级技术人员</li>
<li>5~8年：资深，独挡多面</li>
<li>8~10年：大牛，统筹规划，高屋建瓴</li>
</ul>
</li>
</ol>
<ol>
<li><p>分解技能<br>每一段目标持续2~3年，哪里不懂补哪里，最好以<strong>6个月</strong>为周期</p>
</li>
<li><p>分解行动<br>把技能目标分解为具体要做的事，把6个月的目标分解为1个月的目标</p>
</li>
</ol>
<h1 id="如何在工作中提升自我"><a href="#如何在工作中提升自我" class="headerlink" title="如何在工作中提升自我"></a>如何在工作中提升自我</h1><p>掌握业务代码中的技术后期并不会让你提升经验值，必须打更高级的怪、刷副本，没有一直打小怪就能升到顶级。你要不断的提升自己的水平，然后面临更大的挑战，从而使自己水平更上一级。</p>
<h2 id="Do-more"><a href="#Do-more" class="headerlink" title="Do more"></a>Do more</h2><ol>
<li><p>去熟悉更多系统、业务、代码，不管是不是你所负责的</p>
</li>
<li><p>善于自学。「唯一不变的只有变化」，我们更加需要自学更多东西，因为真正等到要用的时候再来学已经没有时间了</p>
</li>
</ol>
<h2 id="Do-better"><a href="#Do-better" class="headerlink" title="Do better"></a>Do better</h2><p>你负责的系统和业务，总有不合理和可以改进的地方。这些“不合理”和“可改进”的地方，都是更高级别的怪物，打完后能够增加更多的经验值。</p>
<h2 id="Do-exercise"><a href="#Do-exercise" class="headerlink" title="Do exercise"></a>Do exercise</h2><p>印第安人有一句谚语：I hear and I forget. I see and I remember. I do and I understand.<br>其实方法很简单：learning、trying、teaching</p>
]]></content>
      
        <categories>
            
            <category> 职业发展 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《大数据与机器学习》读书笔记（一） 数据与数据平台]]></title>
      <url>JuniorNi.github.io/2017/03/12/%E3%80%8A%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%B8%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%20%E6%95%B0%E6%8D%AE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0/</url>
      <content type="html"><![CDATA[<h1 id="数据环境与数据形态"><a href="#数据环境与数据形态" class="headerlink" title="数据环境与数据形态"></a>数据环境与数据形态</h1><p>对于企业经营中产生的数据有三种形态：</p>
<ul>
<li><strong>生产数据</strong>：指某个生产系统的生产环境数据库中的数据。它会随着业务应用的变化而变化，是动态的，如用户的账户余额数据。</li>
<li><strong>原始数据：</strong>对生产数据的解耦，包括数据脱敏、字段筛选、批量导出（将动态数据的“快照”保存下来）。其目的是为了防止生产数据与分析数据的数据直连，带来数据管理与应用的灾难</li>
<li><strong>分析数据：</strong>对原始数据进行ETL之后的数据，主要从<u><em>属性筛选</em></u>、<u><em>标准统一</em></u>（如数据格式与字段含义的不一致）、<u><em>优化存储</em></u>（如创建索引，分区，分表存储）的角度进行ETL。</li>
</ul>
<a id="more"></a>
<h1 id="数据仓库平台"><a href="#数据仓库平台" class="headerlink" title="数据仓库平台"></a>数据仓库平台</h1><p>数仓本质是解决大批量数据的<strong>入口</strong>与<strong>出口</strong>问题，为分析与应用提供支持。该书作者认为能稳定提供 <u><em>“顺滑”</em></u> 数据服务的数仓需要注下面两点：</p>
<ol>
<li><p><strong>更新规则：</strong></p>
<p>分全量更新与增量更新两种方式。更新过程中要注意<em>“部分提交”</em>与<em>“数据断档”</em>问题，可行的解决方案是<u><em>增加中间表</em></u>，如图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4762054-6978ed57d2129568.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20170212_1.jpg"></p>
</li>
<li><p><strong>存储规则：</strong></p>
<p>分析发现，数仓用户使用的交易数据90%集中在近三个月，60%的作业仅集中在近一个月。所以可行的办法是“<u><em>大表拆小表，小表组视图</em></u>”，提高访问效率。 </p>
</li>
</ol>
<h1 id="大数据平台"><a href="#大数据平台" class="headerlink" title="大数据平台"></a>大数据平台</h1><p>之前一直把Hive与Hbase的概念混淆，趁此机会搞清楚。</p>
<table>
<thead>
<tr>
<th style="text-align:center">Hbase</th>
<th style="text-align:center">Hive</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">基于HDFS的非关系型数据库（KV型）</td>
<td style="text-align:center">关系型数据结构，是用SQL替代写MR的编程框架</td>
</tr>
<tr>
<td style="text-align:center">物理表，适合存放非结构化的数据</td>
<td style="text-align:center">纯逻辑表，本身不存储数据，完全依赖于HDFS和MR</td>
</tr>
<tr>
<td style="text-align:center">处理数据是基于列的模式</td>
<td style="text-align:center">基于MR处理数据,而MR是基于行的模式</td>
</tr>
<tr>
<td style="text-align:center">HBase是为了支持弥补Hadoop对实时操作的缺陷的项目</td>
<td style="text-align:center">Hive是建立在Hadoop之上为了减少MapReduce jobs编写工作的批处理系统</td>
</tr>
<tr>
<td style="text-align:center">适合实时查询</td>
<td style="text-align:center">适合查询分析统计</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[matplotlib绘图－斜上抛运动]]></title>
      <url>JuniorNi.github.io/2017/03/11/matplotlib%E8%BF%90%E7%94%A8%EF%BC%8D%E6%96%9C%E4%B8%8A%E6%8A%9B%E8%BF%90%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>matplotlib是Python中绘制2D图形使用最多的库，可以很轻松的将数据图形化。本文绘制了斜上抛运动，下面是最终的效果。</p>
<p><img src="http://ommtyfkn6.bkt.clouddn.com/up.gif" style="width: 350px;"><br>（菲菲老师教得好，幸不辱命 (•‾̑⌣‾̑•)✧˖° ）</p>
<a id="more"></a>
<h1 id="「准备工作」"><a href="#「准备工作」" class="headerlink" title="「准备工作」"></a>「准备工作」</h1><ol>
<li><p><strong>导入所需数据包</strong><br>这里的animation.FuncAnimation（fig，update，generate，interval = 5）函数，是用于生成动态图片的。其中fig表示生成的图表对象；generate函数生成数据后传递给update函数更新，这样数据不断更新，图形也不停变化；interval表示时间间隔，设置的值越小，运动速度越快</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> animation	</div><div class="line"><span class="keyword">import</span> math</div></pre></td></tr></table></figure>
</li>
<li><p><strong>设置图形窗口参数</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 中文字体路径设置，防止中文不显示</span></div><div class="line">font=FontProperties(fname=<span class="string">r"c:\windows\fonts\simsun.ttc"</span>,size=<span class="number">14</span>)</div><div class="line"></div><div class="line"><span class="comment"># 初始化图形窗口</span></div><div class="line">fig = plt.figure()</div><div class="line">ax = fig.add_subplot(<span class="number">111</span>)	</div><div class="line">ax.set_aspect(<span class="string">'equal'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 设置坐标轴的x,y取值范围</span></div><div class="line">xmin = <span class="number">0</span></div><div class="line">ymin = <span class="number">0</span></div><div class="line">ax = plt.axes(xlim = (xmin, xmax), ylim = (ymin, ymax)) </div><div class="line"></div><div class="line"><span class="comment"># 创建一个圆，圆点在（0,0），半径为1</span></div><div class="line">circle = plt.Circle((xmin, ymin), <span class="number">1</span>)</div><div class="line">ax.add_patch(circle)</div></pre></td></tr></table></figure>
</li>
<li><p><strong>给定初始参数值</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">g = <span class="number">9.8</span></div><div class="line">u = <span class="number">30</span>	<span class="comment"># 斜上抛的初速度</span></div><div class="line">theta = <span class="number">60</span>	<span class="comment"># 与水平方向的夹角θ</span></div><div class="line">theta_radians = math.radians(theta)	<span class="comment"># 返回一个角度的弧度值</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>计算衍生参数</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">t_flight= <span class="number">2</span>*u*math.sin(theta_radians)/g		<span class="comment"># 从A点到B点所需时间</span></div><div class="line">t_max = u*math.sin(theta_radians)/g	<span class="comment"># 上升到最大高度所需时间</span></div><div class="line">xmax = u*math.cos(theta_radians)*t_flight  <span class="comment"># AB两点的距离</span></div><div class="line">ymax = u*math.sin(theta)*t_max - <span class="number">0.5</span>*g*t_max**<span class="number">2</span>  <span class="comment"># 上升的最大高度</span></div></pre></td></tr></table></figure>
<p> <img src="http://upload-images.jianshu.io/upload_images/4762054-f358ae7ae1e3e1bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" style="width: 500px;"></p>
</li>
</ol>
<h1 id="「制作动态效果」"><a href="#「制作动态效果」" class="headerlink" title="「制作动态效果」"></a>「制作动态效果」</h1><p>主要利用前面介绍的animation.FuncAnimation函数。于是我们需要构造generate与update函数，让它动起来~</p>
<p><strong>generate函数</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#产生时间间隔参数（每个数据间隔为0.05），依次传递给updata函数   </span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">()</span>:</span></div><div class="line">	t = <span class="number">0</span></div><div class="line">	<span class="keyword">while</span> t &lt; t_flight:</div><div class="line">		t += <span class="number">0.05</span></div><div class="line">		<span class="keyword">yield</span> t</div></pre></td></tr></table></figure></p>
<p><strong>update函数</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#更新时间间隔参数，从而不断改变圆的圆心坐标位置，让其移动 </span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(t)</span>:</span></div><div class="line">    x = u*math.cos(theta_radians)*t</div><div class="line">    y = u*math.sin(theta_radians)*t - <span class="number">0.5</span>*g*t*t</div><div class="line">    circle.center = x, y</div><div class="line">    <span class="keyword">return</span> circle,</div></pre></td></tr></table></figure></p>
<p><strong>打印相关信息</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Print</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">print</span> (<span class="string">u"初始速度（米/秒）:"</span>,u)</div><div class="line">    <span class="keyword">print</span> (<span class="string">u"发射角度（度）"</span>,theta)</div><div class="line">    <span class="keyword">print</span> (<span class="string">u"飞行总时间（秒）"</span>,t_flight)</div><div class="line">    <span class="keyword">print</span> (<span class="string">u"飞行距离（米）"</span>,xmax)</div></pre></td></tr></table></figure></p>
<p><strong>动画函数</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">anim = animation.FuncAnimation(fig, update,generate,interval=<span class="number">10</span>)</div><div class="line"></div><div class="line"><span class="comment"># 附加信息</span></div><div class="line">anim= animation.FuncAnimation(fig, update,generate,interval=<span class="number">10</span>)</div><div class="line">plt.title(<span class="string">u'导弹发射轨迹'</span>,fontproperties=font)</div><div class="line">plt.xlabel(<span class="string">u'水平距离(米)'</span>,fontproperties=font)</div><div class="line">plt.ylabel(<span class="string">u'导弹运行高度（米）'</span>,fontproperties=font)</div><div class="line">plt.show()</div><div class="line">Print()</div></pre></td></tr></table></figure></p>
<p>最后就能看到首页的动态图了 ヾ(◍’౪`◍)ﾉﾞ</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> matplotlib </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R数据可视化－动态、交互式地图神器（三）自定义Marker]]></title>
      <url>JuniorNi.github.io/2017/03/08/R%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%8D%E5%8A%A8%E6%80%81%E3%80%81%E4%BA%A4%E4%BA%92%E5%BC%8F%E5%9C%B0%E5%9B%BE%E7%A5%9E%E5%99%A8%EF%BC%88%E4%B8%89%EF%BC%89%E7%AC%A6%E5%8F%B7%E6%A0%87%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1 id="Leaflet-LeafletCN-系列"><a href="#Leaflet-LeafletCN-系列" class="headerlink" title="Leaflet/LeafletCN 系列"></a>Leaflet/LeafletCN 系列</h1><p><a href="http://www.jianshu.com/p/5211d151308f" target="_blank" rel="external">R数据可视化－动态、交互式地图神器（一）概述与实现</a><br><a href="http://www.jianshu.com/p/c74656950836" target="_blank" rel="external">R数据可视化－动态、交互式地图神器（二）地图与定位</a>   </p>
<a id="more"></a>
<p>特别喜欢Leaflet的marker自定义，主要有以下几种标记方法</p>
<h2 id="【标记】"><a href="#【标记】" class="headerlink" title="【标记】"></a>【标记】</h2><ul>
<li>addMarkers(popup,icon)   </li>
<li>awesomeMarker(icon,library, markerColor,iconColor )</li>
<li><p>addCircleMarker(popup,color,fillOpacity)</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">-<span class="ruby"> popup：文字描述</span></div><div class="line">-<span class="ruby"> icon：自定义图标</span></div><div class="line"></div><div class="line">-<span class="ruby"> icon：图表类型</span></div><div class="line">-<span class="ruby"> library：图标库</span></div><div class="line">-<span class="ruby"> markerColor：背景颜色</span></div><div class="line">-<span class="ruby"> iconColor ：图标颜色</span></div><div class="line"></div><div class="line">-<span class="ruby"> popup：文字描述</span></div><div class="line">-<span class="ruby"> color：颜色</span></div><div class="line">-<span class="ruby"> fillOpacity：透明度</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="【第一类方法举例】"><a href="#【第一类方法举例】" class="headerlink" title="【第一类方法举例】"></a>【第一类方法举例】</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">df = data.frame(Lat = <span class="number">31</span>+ rnorm(<span class="number">10</span>,<span class="number">0</span>,<span class="number">1</span>), Lon = <span class="number">121</span> + rnorm(<span class="number">10</span>,<span class="number">0</span>,<span class="number">1</span>))  # 生成<span class="number">10</span>个随机点</div><div class="line"></div><div class="line">df   #传数据</div><div class="line">  %&gt;% leaflet()   # 加载地图容器</div><div class="line">  %&gt;% addTiles()  # 加载底图</div><div class="line">  %&gt;% addMarkers()  # 加默认标记</div></pre></td></tr></table></figure>
<p>这种是默认的图标<br><img src="http://upload-images.jianshu.io/upload_images/4762054-9aab31a29346f373.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>接下来自定义icon<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">warIcons &lt;- iconList(  <span class="comment">#自定义icon图标</span></div><div class="line">    <span class="attr">cat</span> = makeIcon(<span class="string">"cat.png"</span>, </div><div class="line">                     <span class="attr">iconWidth</span> = <span class="number">60</span>, <span class="attr">iconHeight</span> = <span class="number">60</span>,</div><div class="line">                     <span class="attr">iconAnchorX</span> = <span class="number">30</span>, <span class="attr">iconAnchorY</span> = <span class="number">30</span>),</div><div class="line">    <span class="attr">dog</span> = makeIcon(<span class="string">"dog.png"</span>, </div><div class="line">                   <span class="attr">iconWidth</span> = <span class="number">60</span>, <span class="attr">iconHeight</span> = <span class="number">60</span>,</div><div class="line">                   <span class="attr">iconAnchorX</span> = <span class="number">30</span>, <span class="attr">iconAnchorY</span> = <span class="number">30</span>)</div><div class="line">)  </div><div class="line"></div><div class="line">geo </div><div class="line">  %&gt;% leaflet()     <span class="comment">#加地图容器</span></div><div class="line">  %&gt;% addProviderTiles(<span class="string">"Thunderforest.SpinalMap"</span>)    <span class="comment">#加地图底图</span></div><div class="line">  %&gt;% addMarkers(<span class="attr">icon=~warIcons[type])</span>    <span class="comment">#使用自定义的icon</span></div></pre></td></tr></table></figure></p>
<p>其中geo数据长这样<br><img src="http://upload-images.jianshu.io/upload_images/4762054-1f9fbb767eb0e2b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="geo"></p>
<p>其中makeIcon用法<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">makeIcon(iconUrl ,iconWidth,iconHeight,iconAnchorX ,iconAnchorY)</div><div class="line"> -<span class="ruby"> iconUrl : 图标的url地址</span></div><div class="line"> -<span class="ruby"> iconWidth ：图标的宽度</span></div><div class="line"> -<span class="ruby"> <span class="symbol">iconHeight:</span> 图标的高度</span></div><div class="line"> -<span class="ruby"> iconAnchorX <span class="symbol">:</span>图标的中心点x轴偏移（以左上角为<span class="number">0</span>,<span class="number">0</span>)</span></div><div class="line"> -<span class="ruby"> iconAnchorY <span class="symbol">:</span>图标的中心点Y轴偏移（以左上角为<span class="number">0</span>,<span class="number">0</span>)</span></div></pre></td></tr></table></figure></p>
<p>效果<br><img src="http://upload-images.jianshu.io/upload_images/4762054-f03c76ada31354f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="猫狗大战"></p>
<h2 id="【第二类方法举例】"><a href="#【第二类方法举例】" class="headerlink" title="【第二类方法举例】"></a>【第二类方法举例】</h2><p>可以在library参数中设定你希望选择的图标库，有以下几个：</p>
<ul>
<li><a href="http://fontawesome.io/icons/" target="_blank" rel="external">fontIcons</a></li>
<li><a href="http://getbootstrap.com/components/#glyphicons" target="_blank" rel="external">glyphicon</a></li>
<li><a href="http://ionicons.com/" target="_blank" rel="external">Ionicons</a></li>
</ul>
<p>如：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">myIcon</span> = makeAwesomeIcon(<span class="attr">icon</span> = <span class="string">"book"</span>, <span class="attr">library</span> = <span class="string">"glyphicon"</span>,<span class="attr">markerColor</span> = <span class="string">"purple"</span>)</div><div class="line"></div><div class="line">df</div><div class="line">%&gt;% leaflet() </div><div class="line">%&gt;% setView() </div><div class="line">%&gt;% addProviderTiles(<span class="string">"NASAGIBS.ViirsEarthAtNight2012"</span>) </div><div class="line">%&gt;% addAwesomeMarkers(<span class="attr">icon=myIcon)</span></div></pre></td></tr></table></figure></p>
<p>效果<br><img src="http://upload-images.jianshu.io/upload_images/4762054-f83a617c9e564333.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="【第三类方法举例】"><a href="#【第三类方法举例】" class="headerlink" title="【第三类方法举例】"></a>【第三类方法举例】</h2><p>addCircleMarkers()方法更简单，直接把点作为一个镶边的圆（或者说圆符号）绘制到地图上，如：<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet<span class="comment">(df)</span> </div><div class="line"><span class="meta">%</span>&gt;<span class="meta">%</span> addProviderTiles<span class="comment">("CartoDB.Positron")</span></div><div class="line"><span class="meta">%</span>&gt;<span class="meta">%</span> addCircleMarkers<span class="comment">()</span></div></pre></td></tr></table></figure></p>
<p>效果<br><img src="http://upload-images.jianshu.io/upload_images/4762054-7119a4682600513c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
]]></content>
      
        <categories>
            
            <category> R </category>
            
        </categories>
        
        
        <tags>
            
            <tag> R </tag>
            
            <tag> Leaflet </tag>
            
            <tag> 数据可视化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建个人博客]]></title>
      <url>JuniorNi.github.io/2017/03/05/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>人啊，总有那么一瞬间，想把自己各种美好与不美好的瞬间，经历与感悟给记录下来。当自己回过头再来看的时候，也许会哭，会笑，酸甜苦辣，各有滋味。当这些点点滴滴汇聚起来之后，估计我会仰天大吼：这一世没白活！<br><a id="more"></a></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>这个周末在网上各种找资料、跨过无数坑之后，个人博客算是初步完成了。</p>
<h2 id="【目标与要求】"><a href="#【目标与要求】" class="headerlink" title="【目标与要求】"></a>【目标与要求】</h2><ul>
<li>美观：对审美有一定要求，有相对不错的外观</li>
<li>功能：起码能分类、打标签、各种时间维度能归档</li>
<li>学习成本：语言、代码相对更容易，学习成本相对较低</li>
<li>时间与金钱成本：最好不用花钱（能省点是一点，我的土壕朋友请无视），不用花太多时间在系统运维  </li>
</ul>
<h2 id="【产品选型】"><a href="#【产品选型】" class="headerlink" title="【产品选型】"></a>【产品选型】</h2><ul>
<li>第三方博客平台，如CSDN、博客园、新浪、豆瓣等。可直接写文章，但模板、样式固定，不算难看也不算好看（简书整体不错，简约风，但是不能带标签，而且鸡汤较多…）</li>
<li>博客工具，部分支持MarkDown语法，免去把文本转化为HTML的痛苦，主要有：<ul>
<li><strong>wordpress</strong>：功能强大，要有主机与域名（免费有限制，正经使用的要花钱购买、备案，还要考虑审批部门的效率…你懂的），折腾太费事费时</li>
<li><strong>ghost</strong>：类似wordpress，相对较重，也是动态网站、需要依赖数据库</li>
<li><strong>Jekyll</strong>：静态文件生成器，支持Markdown，能部署到github。依赖较多库，windows用户不友好，无本地预览功能</li>
<li><strong>hexo</strong>：安装简单，依赖少（仅node），中文支持好（台湾人写的），命令少，易于记忆，可本地实现简单预览，支持markdown。  </li>
</ul>
</li>
</ul>
<p>果断选择了<strong>Hexo</strong>，下面是介绍下主角：</p>
<p> “A fast, simple &amp; powerful blog framework, powered by Node.js.”（官方版）。它是一个Node的静态博客框架，因此没有数据库。可直接部署到github上。好处大大的：省去服务器成本，减少系统运维(系统管理、备份、网络)。</p>
<h2 id="【安装操作】"><a href="#【安装操作】" class="headerlink" title="【安装操作】"></a>【安装操作】</h2><ol>
<li><p><strong>安装node.js</strong>：用来生成静态页面[<a href="https://nodejs.org/en/" target="_blank" rel="external">点击安装node</a>]</p>
</li>
<li><p><strong>注册Github账号</strong>：欢迎加入全球最大的同性交友网站ヾ(◍’౪`◍)ﾉﾞ。不限流量、免费提供开放的托管静态页面的网站。<br> <em>注意！新建的Repo一定要与你的github用户名一模一样，如<strong>[username].github.io</strong></em></p>
</li>
<li><p><strong>安装Git</strong>：用于把本地的Hexo内容沟通,传输,部署到Github上。安装教程可参考廖雪峰的博客[<a href="https://git-for-windows.github.io/" target="_blank" rel="external">点击安装Git</a>]<br> <em>以下步骤一定要做！</em></p>
  <figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user<span class="selector-class">.name</span> <span class="string">"Your Name"</span></div><div class="line">$ git config --global user<span class="selector-class">.email</span> <span class="string">"email@example.com"</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>安装Hexo</strong><br> 在git bash中敲：</p>
 <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-<span class="keyword">cli</span> -g</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="【构建博客】"><a href="#【构建博客】" class="headerlink" title="【构建博客】"></a>【构建博客】</h2><ol>
<li><p><strong>初始化</strong><br> 创建一个新的文件夹（放你博客的地方），右键点击Git Bash Here，执行：</p>
 <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo init</span></div></pre></td></tr></table></figure>
<p> 可以通过以下命令查看是否执行成功</p>
 <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo s</span></div></pre></td></tr></table></figure>
<p> 出现以下代码，恭喜成功~，并在浏览器输入：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 进行本地预览（默认端口4000）</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INFO  <span class="keyword">Start</span> processing</div><div class="line">INFO  Hexo <span class="keyword">is</span> running <span class="keyword">at</span> <span class="keyword">http</span>://localhost:<span class="number">4000</span>/. Press Ctrl+C <span class="keyword">to</span> stop.</div></pre></td></tr></table></figure>
<p> <img src="/images/hexo.png" alt=""></p>
</li>
<li><p><strong>配置与部署</strong><br> 我们看到之前创建的博客所在文件夹结构：</p>
<blockquote>
<p>Blog<br> 　｜<br> 　｜－－ .deploy_git<br> 　｜－－ node_modules<br> 　｜－－ scaffolds<br> 　｜－－ source<br> 　｜－－ themes<br> 　｜－－ _config.yml<br> 　｜－－ _gitinore<br> 　｜－－ db.json<br> 　｜－－ package.json<br> 　｜－－ debug.log </p>
</blockquote>
<p> 现在需要_config.yml与我们github用户名对应的仓库建立联系。打开<code>_config.yml</code>文件，拉到最后对应修改：</p>
 <figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">type: git</div><div class="line">repo: <span class="link">http://github.com/</span>[<span class="string">username</span>]/[username].github.io</div></pre></td></tr></table></figure>
<p> 并部署：</p>
 <figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean      # 清除缓存</div><div class="line">hexo <span class="keyword">generate</span>   # 生成静态页面</div><div class="line">hexo deploy     # 上传部署</div></pre></td></tr></table></figure>
</li>
</ol>
<p>到现在，我们的“简装房”就有了，后续需要通过主题替换与各种功能设置，来鸟枪换大炮，变成“精装房”(▰˘◡˘▰) ~。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo 中文文档</a> 【包涵：文档、API、插件、主题】<br><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT 使用文档</a>【包含：开始使用、主题配置、第三方服务、内建标签、常见问题】</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
