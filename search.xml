<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Semantic UI上手]]></title>
      <url>JuniorNi.github.io/2017/03/18/Semantic-UI%E4%B8%8A%E6%89%8B/</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4762054-abb3edf07ba4b920.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>最近使用<code>Semantic UI</code>这一CSS框架实现了上图的苹果静态官网首页，我只想说，要不要这么简单粗暴！它省去了你大量时间与经历，不必去重复造轮子。但如此的便利必然是付出了某种你还未发现的代价……</p>
<h1 id="【Semantic-UI基础知识】"><a href="#【Semantic-UI基础知识】" class="headerlink" title="【Semantic UI基础知识】"></a>【Semantic UI基础知识】</h1><p>我们要了解一些基本的样式与技巧，并能通过使用“形容词”来改变样式。</p>
<h2 id="基本样式"><a href="#基本样式" class="headerlink" title="基本样式"></a>基本样式</h2><p>首先，<code>header</code>中导入<code>semantic</code>样式，在<code>body</code>的<code>div</code>块中定义<code>class=“ui segment”</code>，基本效果如下<br><img src="http://upload-images.jianshu.io/upload_images/4762054-d931b46a42c7f283.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="使用“形容词”"><a href="#使用“形容词”" class="headerlink" title="使用“形容词”"></a>使用“形容词”</h2><p>其次，在<code>div class = &quot;XXX&quot;</code>中加上你想实现的“形容词”</p>
<ul>
<li>inverted + color</li>
<li>vertical</li>
<li>padded</li>
</ul>
<p><strong>inverted</strong><br> 颜色反转，若不加颜色，则直接变成黑色，官网给出下面多种颜色选择<br>    <img src="http://upload-images.jianshu.io/upload_images/4762054-a3920b371c3a6230.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p><strong>vertical</strong><br>    消除两边的圆角、阴影，同一<code>vertical</code>作用下的多个<code>segment</code>之间缝隙消失，<br>    <img src="http://upload-images.jianshu.io/upload_images/4762054-cedff6d05992d74a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<p><strong>padded</strong><br>    改变内距</p>
<h1 id="【Apple静态官网首页实现】"><a href="#【Apple静态官网首页实现】" class="headerlink" title="【Apple静态官网首页实现】"></a>【Apple静态官网首页实现】</h1><p>了解了必要的知识之后，赶紧来实践一番！</p>
<h2 id="导航菜单栏"><a href="#导航菜单栏" class="headerlink" title="导航菜单栏"></a>导航菜单栏</h2><p><img src="http://upload-images.jianshu.io/upload_images/4762054-6475ff8105f883f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>使用<code>semantic</code>自带的<code>ui menu</code>样式，第一个与最后两个使用图标插入，其余的直接输文字，这里有几个小点需要注意：</p>
<ul>
<li>fixed：固定菜单栏，下拉拖动时表头不会消失，一直悬浮在最上面</li>
<li>fitted：大小宽度自适应</li>
<li>nine item：九个图标居中显示</li>
<li>borderless：去除图案之间的白色间隔线</li>
</ul>
<p><em>代码如下</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui fixed fitted inverted borderless nine item menu"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images\appleicon.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Mac<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Music<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>技术支持<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images\searchicon.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images\buyicon.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="iPhone7大图"><a href="#iPhone7大图" class="headerlink" title="iPhone7大图"></a>iPhone7大图</h2><p><img src="http://upload-images.jianshu.io/upload_images/4762054-c44b29136d0ec9ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<p>使用<code>ui image</code>样式插入图片，其他注意点：</p>
<ul>
<li>basic：消除黑边</li>
<li>secondary：相当于下面的效果<br>  <img src="http://upload-images.jianshu.io/upload_images/4762054-b39d0c79e40c621b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br>  但是在这里可以从视觉效果上去除图片下的底色，否则会是下面这样，要多难看有多难看…<br>  <img src="http://upload-images.jianshu.io/upload_images/4762054-a75dab13eac754ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></li>
</ul>
<p><em>代码如下</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui basic secondary vertical segment"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui image"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/banner.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="四张小图"><a href="#四张小图" class="headerlink" title="四张小图"></a>四张小图</h2><p><img src="http://upload-images.jianshu.io/upload_images/4762054-2477cad6f4d194d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><em>代码如下</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui basic secondary vertical segment"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui fitted text menu"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img1.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img2.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img3.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ui image"</span> <span class="attr">src</span>=<span class="string">"images/img4.png"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="最后一段文字"><a href="#最后一段文字" class="headerlink" title="最后一段文字"></a>最后一段文字</h2><p><img src="http://upload-images.jianshu.io/upload_images/4762054-c46086dff62d64f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<p>使用嵌套制作网页<code>ui segment -&gt; ui container</code>，注意事项：</p>
<ul>
<li>very padded：内距变大</li>
<li>一条分割线：通过<code>&lt;div class=&quot;ui divider&quot;&gt;&lt;/div&gt;</code>方式“画出”一条分割线</li>
<li>grid：网格系统，使用<code>five column</code>分成五列</li>
<li>text menu：每段文字放在里面，且用<code>vertical</code>垂直排列</li>
</ul>
<p><em>代码如下</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical secondary very padded segment"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui container"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sub header"</span>&gt;</span></div><div class="line">            双镜头摄像头仅于 iPhone 7 Plus 提供。亮黑色外观仅于 128GB 及以上存储容量的机型提供。</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui five column grid"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui vertical text menu"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Apple Store 商店<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>查找零售店<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPad<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPhone<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>Watch<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>iPod<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 段落重复4遍ing --&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
]]></content>
      
        <categories>
            
            <category> Web开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Web </tag>
            
            <tag> Css </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何成为技术大牛]]></title>
      <url>JuniorNi.github.io/2017/03/15/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E6%8A%80%E6%9C%AF%E5%A4%A7%E7%89%9B/</url>
      <content type="html"><![CDATA[<p>前几日朋友分享了一篇“技术大牛养成指南”，看完之后有种豁然开朗的感觉，这也许和我最近的状态有关，最近一直没想通的问题似乎在这篇文章中也得到解决。作者通过目标拆解，用可实践的方法来指导大家如何在日常生活与工作中去运用。</p>
<a id="more"></a>
<h1 id="什么是1万小时理论"><a href="#什么是1万小时理论" class="headerlink" title="什么是1万小时理论"></a>什么是1万小时理论</h1><p>成为顶级专家的<strong>唯一</strong>方法就是1万小时持续不断地练习，意味着每天如果花3小时来提升自己的技能，需要10年…（不能包括你每天的重复性工作时间，要从专业广度与深度上不断扩展）</p>
<h1 id="如何找到1万小时"><a href="#如何找到1万小时" class="headerlink" title="如何找到1万小时"></a>如何找到1万小时</h1><ol>
<li>每天的起床前与睡前30分钟：你会感到每天平白无故比别人多了一、两个小时</li>
<li>利用或节省路途时间</li>
<li>周末4小时</li>
</ol>
<h1 id="如何坚持下去"><a href="#如何坚持下去" class="headerlink" title="如何坚持下去"></a>如何坚持下去</h1><ol>
<li>分解等级<ul>
<li>0~1年：菜鸟，需要手把手教</li>
<li>1~3年：初级，要别人带你</li>
<li>3~5年：高级，独挡一面，能带初级技术人员</li>
<li>5~8年：资深，独挡多面</li>
<li>8~10年：大牛，统筹规划，高屋建瓴</li>
</ul>
</li>
</ol>
<ol>
<li><p>分解技能<br>每一段目标持续2~3年，哪里不懂补哪里，最好以<strong>6个月</strong>为周期</p>
</li>
<li><p>分解行动<br>把技能目标分解为具体要做的事，把6个月的目标分解为1个月的目标</p>
</li>
</ol>
<h1 id="如何在工作中提升自我"><a href="#如何在工作中提升自我" class="headerlink" title="如何在工作中提升自我"></a>如何在工作中提升自我</h1><p>掌握业务代码中的技术后期并不会让你提升经验值，必须打更高级的怪、刷副本，没有一直打小怪就能升到顶级。你要不断的提升自己的水平，然后面临更大的挑战，从而使自己水平更上一级。</p>
<h2 id="Do-more"><a href="#Do-more" class="headerlink" title="Do more"></a>Do more</h2><ol>
<li><p>去熟悉更多系统、业务、代码，不管是不是你所负责的</p>
</li>
<li><p>善于自学。「唯一不变的只有变化」，我们更加需要自学更多东西，因为真正等到要用的时候再来学已经没有时间了</p>
</li>
</ol>
<h2 id="Do-better"><a href="#Do-better" class="headerlink" title="Do better"></a>Do better</h2><p>你负责的系统和业务，总有不合理和可以改进的地方。这些“不合理”和“可改进”的地方，都是更高级别的怪物，打完后能够增加更多的经验值。</p>
<h2 id="Do-exercise"><a href="#Do-exercise" class="headerlink" title="Do exercise"></a>Do exercise</h2><p>印第安人有一句谚语：I hear and I forget. I see and I remember. I do and I understand.<br>其实方法很简单：learning、trying、teaching</p>
]]></content>
      
        <categories>
            
            <category> 职业发展 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《大数据与机器学习》读书笔记（一） 数据与数据平台]]></title>
      <url>JuniorNi.github.io/2017/03/12/%E3%80%8A%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%B8%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%20%E6%95%B0%E6%8D%AE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0/</url>
      <content type="html"><![CDATA[<h1 id="数据环境与数据形态"><a href="#数据环境与数据形态" class="headerlink" title="数据环境与数据形态"></a>数据环境与数据形态</h1><p>对于企业经营中产生的数据有三种形态：</p>
<ul>
<li><strong>生产数据</strong>：指某个生产系统的生产环境数据库中的数据。它会随着业务应用的变化而变化，是动态的，如用户的账户余额数据。</li>
<li><strong>原始数据：</strong>对生产数据的解耦，包括数据脱敏、字段筛选、批量导出（将动态数据的“快照”保存下来）。其目的是为了防止生产数据与分析数据的数据直连，带来数据管理与应用的灾难</li>
<li><strong>分析数据：</strong>对原始数据进行ETL之后的数据，主要从<u><em>属性筛选</em></u>、<u><em>标准统一</em></u>（如数据格式与字段含义的不一致）、<u><em>优化存储</em></u>（如创建索引，分区，分表存储）的角度进行ETL。</li>
</ul>
<a id="more"></a>
<h1 id="数据仓库平台"><a href="#数据仓库平台" class="headerlink" title="数据仓库平台"></a>数据仓库平台</h1><p>数仓本质是解决大批量数据的入口与出口问题，为分析与应用提供支持。该书作者认为能稳定提供“顺滑”数据服务的数仓需要注下面两点：</p>
<ol>
<li><p><strong>更新规则：</strong></p>
<p>分全量更新与增量更新两种方式。更新过程中要注意<em>“部分提交”</em>与<em>“数据断档”</em>问题，可行的解决方案是<u><em>增加中间表</em></u>，如图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4762054-6978ed57d2129568.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20170212_1.jpg"></p>
</li>
<li><p><strong>存储规则：</strong></p>
<p>分析发现，数仓用户使用的交易数据90%集中在近三个月，60%的作业仅集中在近一个月。所以可行的办法是“<u><em>大表拆小表，小表组视图</em></u>”，提高访问效率。 </p>
</li>
</ol>
<h1 id="大数据平台"><a href="#大数据平台" class="headerlink" title="大数据平台"></a>大数据平台</h1><p>之前一直把Hive与Hbase的概念混淆，趁此机会搞清楚。</p>
<table>
<thead>
<tr>
<th style="text-align:center">Hbase</th>
<th style="text-align:center">Hive</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">基于HDFS的非关系型数据库（KV型）</td>
<td style="text-align:center">关系型数据结构，是用SQL替代写MR的编程框架</td>
</tr>
<tr>
<td style="text-align:center">物理表，适合存放非结构化的数据</td>
<td style="text-align:center">纯逻辑表，本身不存储数据，完全依赖于HDFS和MR</td>
</tr>
<tr>
<td style="text-align:center">处理数据是基于列的模式</td>
<td style="text-align:center">基于MR处理数据,而MR是基于行的模式</td>
</tr>
<tr>
<td style="text-align:center">HBase是为了支持弥补Hadoop对实时操作的缺陷的项目</td>
<td style="text-align:center">Hive是建立在Hadoop之上为了减少MapReduce jobs编写工作的批处理系统</td>
</tr>
<tr>
<td style="text-align:center">适合实时查询</td>
<td style="text-align:center">适合查询分析统计</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[matplotlib绘图－斜上抛运动]]></title>
      <url>JuniorNi.github.io/2017/03/11/matplotlib%E8%BF%90%E7%94%A8%EF%BC%8D%E6%96%9C%E4%B8%8A%E6%8A%9B%E8%BF%90%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>matplotlib是Python中绘制2D图形使用最多的库，可以很轻松的将数据图形化。本文绘制了斜上抛运动，下面是最终的效果。</p>
<p><img src="http://ommtyfkn6.bkt.clouddn.com/up.gif" style="width: 350px;"><br>（菲菲老师教得好，幸不辱命 (•‾̑⌣‾̑•)✧˖° ）</p>
<a id="more"></a>
<h1 id="「准备工作」"><a href="#「准备工作」" class="headerlink" title="「准备工作」"></a>「准备工作」</h1><ol>
<li><p><strong>导入所需数据包</strong><br>这里的animation.FuncAnimation（fig，update，generate，interval = 5）函数，是用于生成动态图片的。其中fig表示生成的图表对象；generate函数生成数据后传递给update函数更新，这样数据不断更新，图形也不停变化；interval表示时间间隔，设置的值越小，运动速度越快</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> animation	</div><div class="line"><span class="keyword">import</span> math</div></pre></td></tr></table></figure>
</li>
<li><p><strong>设置图形窗口参数</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 中文字体路径设置，防止中文不显示</span></div><div class="line">font=FontProperties(fname=<span class="string">r"c:\windows\fonts\simsun.ttc"</span>,size=<span class="number">14</span>)</div><div class="line"></div><div class="line"><span class="comment"># 初始化图形窗口</span></div><div class="line">fig = plt.figure()</div><div class="line">ax = fig.add_subplot(<span class="number">111</span>)	</div><div class="line">ax.set_aspect(<span class="string">'equal'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 设置坐标轴的x,y取值范围</span></div><div class="line">xmin = <span class="number">0</span></div><div class="line">ymin = <span class="number">0</span></div><div class="line">ax = plt.axes(xlim = (xmin, xmax), ylim = (ymin, ymax)) </div><div class="line"></div><div class="line"><span class="comment"># 创建一个圆，圆点在（0,0），半径为1</span></div><div class="line">circle = plt.Circle((xmin, ymin), <span class="number">1</span>)</div><div class="line">ax.add_patch(circle)</div></pre></td></tr></table></figure>
</li>
<li><p><strong>给定初始参数值</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">g = <span class="number">9.8</span></div><div class="line">u = <span class="number">30</span>	<span class="comment"># 斜上抛的初速度</span></div><div class="line">theta = <span class="number">60</span>	<span class="comment"># 与水平方向的夹角θ</span></div><div class="line">theta_radians = math.radians(theta)	<span class="comment"># 返回一个角度的弧度值</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>计算衍生参数</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">t_flight= <span class="number">2</span>*u*math.sin(theta_radians)/g		<span class="comment"># 从A点到B点所需时间</span></div><div class="line">t_max = u*math.sin(theta_radians)/g	<span class="comment"># 上升到最大高度所需时间</span></div><div class="line">xmax = u*math.cos(theta_radians)*t_flight  <span class="comment"># AB两点的距离</span></div><div class="line">ymax = u*math.sin(theta)*t_max - <span class="number">0.5</span>*g*t_max**<span class="number">2</span>  <span class="comment"># 上升的最大高度</span></div></pre></td></tr></table></figure>
<p> <img src="http://upload-images.jianshu.io/upload_images/4762054-f358ae7ae1e3e1bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" style="width: 500px;"></p>
</li>
</ol>
<h1 id="「制作动态效果」"><a href="#「制作动态效果」" class="headerlink" title="「制作动态效果」"></a>「制作动态效果」</h1><p>主要利用前面介绍的animation.FuncAnimation函数。于是我们需要构造generate与update函数，让它动起来~</p>
<p><strong>generate函数</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#产生时间间隔参数（每个数据间隔为0.05），依次传递给updata函数   </span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">()</span>:</span></div><div class="line">	t = <span class="number">0</span></div><div class="line">	<span class="keyword">while</span> t &lt; t_flight:</div><div class="line">		t += <span class="number">0.05</span></div><div class="line">		<span class="keyword">yield</span> t</div></pre></td></tr></table></figure></p>
<p><strong>update函数</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#更新时间间隔参数，从而不断改变圆的圆心坐标位置，让其移动 </span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(t)</span>:</span></div><div class="line">    x = u*math.cos(theta_radians)*t</div><div class="line">    y = u*math.sin(theta_radians)*t - <span class="number">0.5</span>*g*t*t</div><div class="line">    circle.center = x, y</div><div class="line">    <span class="keyword">return</span> circle,</div></pre></td></tr></table></figure></p>
<p><strong>打印相关信息</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Print</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">print</span> (<span class="string">u"初始速度（米/秒）:"</span>,u)</div><div class="line">    <span class="keyword">print</span> (<span class="string">u"发射角度（度）"</span>,theta)</div><div class="line">    <span class="keyword">print</span> (<span class="string">u"飞行总时间（秒）"</span>,t_flight)</div><div class="line">    <span class="keyword">print</span> (<span class="string">u"飞行距离（米）"</span>,xmax)</div></pre></td></tr></table></figure></p>
<p><strong>动画函数</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">anim = animation.FuncAnimation(fig, update,generate,interval=<span class="number">10</span>)</div><div class="line"></div><div class="line"><span class="comment"># 附加信息</span></div><div class="line">anim= animation.FuncAnimation(fig, update,generate,interval=<span class="number">10</span>)</div><div class="line">plt.title(<span class="string">u'导弹发射轨迹'</span>,fontproperties=font)</div><div class="line">plt.xlabel(<span class="string">u'水平距离(米)'</span>,fontproperties=font)</div><div class="line">plt.ylabel(<span class="string">u'导弹运行高度（米）'</span>,fontproperties=font)</div><div class="line">plt.show()</div><div class="line">Print()</div></pre></td></tr></table></figure></p>
<p>最后就能看到首页的动态图了 ヾ(◍’౪`◍)ﾉﾞ</p>
]]></content>
      
        <categories>
            
            <category> 数据分析 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> matplotlib </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R数据可视化－动态、交互式地图神器（三）自定义Marker]]></title>
      <url>JuniorNi.github.io/2017/03/08/R%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%8D%E5%8A%A8%E6%80%81%E3%80%81%E4%BA%A4%E4%BA%92%E5%BC%8F%E5%9C%B0%E5%9B%BE%E7%A5%9E%E5%99%A8%EF%BC%88%E4%B8%89%EF%BC%89%E7%AC%A6%E5%8F%B7%E6%A0%87%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1 id="Leaflet-LeafletCN-系列"><a href="#Leaflet-LeafletCN-系列" class="headerlink" title="Leaflet/LeafletCN 系列"></a>Leaflet/LeafletCN 系列</h1><p><a href="http://www.jianshu.com/p/5211d151308f" target="_blank" rel="external">R数据可视化－动态、交互式地图神器（一）概述与实现</a><br><a href="http://www.jianshu.com/p/c74656950836" target="_blank" rel="external">R数据可视化－动态、交互式地图神器（二）地图与定位</a>   </p>
<a id="more"></a>
<p>特别喜欢Leaflet的marker自定义，主要有以下几种标记方法</p>
<h2 id="【标记】"><a href="#【标记】" class="headerlink" title="【标记】"></a>【标记】</h2><ul>
<li>addMarkers(popup,icon)   </li>
<li>awesomeMarker(icon,library, markerColor,iconColor )</li>
<li><p>addCircleMarker(popup,color,fillOpacity)</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">-<span class="ruby"> popup：文字描述</span></div><div class="line">-<span class="ruby"> icon：自定义图标</span></div><div class="line"></div><div class="line">-<span class="ruby"> icon：图表类型</span></div><div class="line">-<span class="ruby"> library：图标库</span></div><div class="line">-<span class="ruby"> markerColor：背景颜色</span></div><div class="line">-<span class="ruby"> iconColor ：图标颜色</span></div><div class="line"></div><div class="line">-<span class="ruby"> popup：文字描述</span></div><div class="line">-<span class="ruby"> color：颜色</span></div><div class="line">-<span class="ruby"> fillOpacity：透明度</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="【第一类方法举例】"><a href="#【第一类方法举例】" class="headerlink" title="【第一类方法举例】"></a>【第一类方法举例】</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">df = data.frame(Lat = <span class="number">31</span>+ rnorm(<span class="number">10</span>,<span class="number">0</span>,<span class="number">1</span>), Lon = <span class="number">121</span> + rnorm(<span class="number">10</span>,<span class="number">0</span>,<span class="number">1</span>))  # 生成<span class="number">10</span>个随机点</div><div class="line"></div><div class="line">df   #传数据</div><div class="line">  %&gt;% leaflet()   # 加载地图容器</div><div class="line">  %&gt;% addTiles()  # 加载底图</div><div class="line">  %&gt;% addMarkers()  # 加默认标记</div></pre></td></tr></table></figure>
<p>这种是默认的图标<br><img src="http://upload-images.jianshu.io/upload_images/4762054-9aab31a29346f373.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>接下来自定义icon<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">warIcons &lt;- iconList(  <span class="comment">#自定义icon图标</span></div><div class="line">    <span class="attr">cat</span> = makeIcon(<span class="string">"cat.png"</span>, </div><div class="line">                     <span class="attr">iconWidth</span> = <span class="number">60</span>, <span class="attr">iconHeight</span> = <span class="number">60</span>,</div><div class="line">                     <span class="attr">iconAnchorX</span> = <span class="number">30</span>, <span class="attr">iconAnchorY</span> = <span class="number">30</span>),</div><div class="line">    <span class="attr">dog</span> = makeIcon(<span class="string">"dog.png"</span>, </div><div class="line">                   <span class="attr">iconWidth</span> = <span class="number">60</span>, <span class="attr">iconHeight</span> = <span class="number">60</span>,</div><div class="line">                   <span class="attr">iconAnchorX</span> = <span class="number">30</span>, <span class="attr">iconAnchorY</span> = <span class="number">30</span>)</div><div class="line">)  </div><div class="line"></div><div class="line">geo </div><div class="line">  %&gt;% leaflet()     <span class="comment">#加地图容器</span></div><div class="line">  %&gt;% addProviderTiles(<span class="string">"Thunderforest.SpinalMap"</span>)    <span class="comment">#加地图底图</span></div><div class="line">  %&gt;% addMarkers(<span class="attr">icon=~warIcons[type])</span>    <span class="comment">#使用自定义的icon</span></div></pre></td></tr></table></figure></p>
<p>其中geo数据长这样<br><img src="http://upload-images.jianshu.io/upload_images/4762054-1f9fbb767eb0e2b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="geo"></p>
<p>其中makeIcon用法<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">makeIcon(iconUrl ,iconWidth,iconHeight,iconAnchorX ,iconAnchorY)</div><div class="line"> -<span class="ruby"> iconUrl : 图标的url地址</span></div><div class="line"> -<span class="ruby"> iconWidth ：图标的宽度</span></div><div class="line"> -<span class="ruby"> <span class="symbol">iconHeight:</span> 图标的高度</span></div><div class="line"> -<span class="ruby"> iconAnchorX <span class="symbol">:</span>图标的中心点x轴偏移（以左上角为<span class="number">0</span>,<span class="number">0</span>)</span></div><div class="line"> -<span class="ruby"> iconAnchorY <span class="symbol">:</span>图标的中心点Y轴偏移（以左上角为<span class="number">0</span>,<span class="number">0</span>)</span></div></pre></td></tr></table></figure></p>
<p>效果<br><img src="http://upload-images.jianshu.io/upload_images/4762054-f03c76ada31354f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="猫狗大战"></p>
<h2 id="【第二类方法举例】"><a href="#【第二类方法举例】" class="headerlink" title="【第二类方法举例】"></a>【第二类方法举例】</h2><p>可以在library参数中设定你希望选择的图标库，有以下几个：</p>
<ul>
<li><a href="http://fontawesome.io/icons/" target="_blank" rel="external">fontIcons</a></li>
<li><a href="http://getbootstrap.com/components/#glyphicons" target="_blank" rel="external">glyphicon</a></li>
<li><a href="http://ionicons.com/" target="_blank" rel="external">Ionicons</a></li>
</ul>
<p>如：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">myIcon</span> = makeAwesomeIcon(<span class="attr">icon</span> = <span class="string">"book"</span>, <span class="attr">library</span> = <span class="string">"glyphicon"</span>,<span class="attr">markerColor</span> = <span class="string">"purple"</span>)</div><div class="line"></div><div class="line">df</div><div class="line">%&gt;% leaflet() </div><div class="line">%&gt;% setView() </div><div class="line">%&gt;% addProviderTiles(<span class="string">"NASAGIBS.ViirsEarthAtNight2012"</span>) </div><div class="line">%&gt;% addAwesomeMarkers(<span class="attr">icon=myIcon)</span></div></pre></td></tr></table></figure></p>
<p>效果<br><img src="http://upload-images.jianshu.io/upload_images/4762054-f83a617c9e564333.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="【第三类方法举例】"><a href="#【第三类方法举例】" class="headerlink" title="【第三类方法举例】"></a>【第三类方法举例】</h2><p>addCircleMarkers()方法更简单，直接把点作为一个镶边的圆（或者说圆符号）绘制到地图上，如：<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet<span class="comment">(df)</span> </div><div class="line"><span class="meta">%</span>&gt;<span class="meta">%</span> addProviderTiles<span class="comment">("CartoDB.Positron")</span></div><div class="line"><span class="meta">%</span>&gt;<span class="meta">%</span> addCircleMarkers<span class="comment">()</span></div></pre></td></tr></table></figure></p>
<p>效果<br><img src="http://upload-images.jianshu.io/upload_images/4762054-7119a4682600513c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 数据分析 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> R </tag>
            
            <tag> Leaflet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建个人博客]]></title>
      <url>JuniorNi.github.io/2017/03/05/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>人啊，总有那么一瞬间，想把自己各种美好与不美好的瞬间，经历与感悟给记录下来。当自己回过头再来看的时候，也许会哭，会笑，酸甜苦辣，各有滋味。当这些点点滴滴汇聚起来之后，估计我会仰天大吼：这一世没白活！<br><a id="more"></a></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>这个周末在网上各种找资料、跨过无数坑之后，个人博客算是初步完成了。</p>
<h2 id="【目标与要求】"><a href="#【目标与要求】" class="headerlink" title="【目标与要求】"></a>【目标与要求】</h2><ul>
<li>美观：对审美有一定要求，有相对不错的外观</li>
<li>功能：起码能分类、打标签、各种时间维度能归档</li>
<li>学习成本：语言、代码相对更容易，学习成本相对较低</li>
<li>时间与金钱成本：最好不用花钱（能省点是一点，我的土壕朋友请无视），不用花太多时间在系统运维  </li>
</ul>
<h2 id="【产品选型】"><a href="#【产品选型】" class="headerlink" title="【产品选型】"></a>【产品选型】</h2><ul>
<li>第三方博客平台，如CSDN、博客园、新浪、豆瓣等。可直接写文章，但模板、样式固定，不算难看也不算好看（简书整体不错，简约风，但是不能带标签，而且鸡汤较多…）</li>
<li>博客工具，部分支持MarkDown语法，免去把文本转化为HTML的痛苦，主要有：<ul>
<li><strong>wordpress</strong>：功能强大，要有主机与域名（免费有限制，正经使用的要花钱购买、备案，还要考虑审批部门的效率…你懂的），折腾太费事费时</li>
<li><strong>ghost</strong>：类似wordpress，相对较重，也是动态网站、需要依赖数据库</li>
<li><strong>Jekyll</strong>：静态文件生成器，支持Markdown，能部署到github。依赖较多库，windows用户不友好，无本地预览功能</li>
<li><strong>hexo</strong>：安装简单，依赖少（仅node），中文支持好（台湾人写的），命令少，易于记忆，可本地实现简单预览，支持markdown。  </li>
</ul>
</li>
</ul>
<p>果断选择了<strong>Hexo</strong>，下面是介绍下主角：</p>
<p> “A fast, simple &amp; powerful blog framework, powered by Node.js.”（官方版）。它是一个Node的静态博客框架，因此没有数据库。可直接部署到github上。好处大大的：省去服务器成本，减少系统运维(系统管理、备份、网络)。</p>
<h2 id="【安装操作】"><a href="#【安装操作】" class="headerlink" title="【安装操作】"></a>【安装操作】</h2><ol>
<li><p><strong>安装node.js</strong>：用来生成静态页面[<a href="https://nodejs.org/en/" target="_blank" rel="external">点击安装node</a>]</p>
</li>
<li><p><strong>注册Github账号</strong>：欢迎加入全球最大的同性交友网站ヾ(◍’౪`◍)ﾉﾞ。不限流量、免费提供开放的托管静态页面的网站。<br> <em>注意！新建的Repo一定要与你的github用户名一模一样，如<strong>[username].github.io</strong></em></p>
</li>
<li><p><strong>安装Git</strong>：用于把本地的Hexo内容沟通,传输,部署到Github上。安装教程可参考廖雪峰的博客[<a href="https://git-for-windows.github.io/" target="_blank" rel="external">点击安装Git</a>]<br> <em>以下步骤一定要做！</em></p>
  <figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user<span class="selector-class">.name</span> <span class="string">"Your Name"</span></div><div class="line">$ git config --global user<span class="selector-class">.email</span> <span class="string">"email@example.com"</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>安装Hexo</strong><br> 在git bash中敲：</p>
 <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-<span class="keyword">cli</span> -g</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="【构建博客】"><a href="#【构建博客】" class="headerlink" title="【构建博客】"></a>【构建博客】</h2><ol>
<li><p><strong>初始化</strong><br> 创建一个新的文件夹（放你博客的地方），右键点击Git Bash Here，执行：</p>
 <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo init</span></div></pre></td></tr></table></figure>
<p> 可以通过以下命令查看是否执行成功</p>
 <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo s</span></div></pre></td></tr></table></figure>
<p> 出现以下代码，恭喜成功~，并在浏览器输入：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 进行本地预览（默认端口4000）</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INFO  <span class="keyword">Start</span> processing</div><div class="line">INFO  Hexo <span class="keyword">is</span> running <span class="keyword">at</span> <span class="keyword">http</span>://localhost:<span class="number">4000</span>/. Press Ctrl+C <span class="keyword">to</span> stop.</div></pre></td></tr></table></figure>
<p> <img src="/images/hexo.png" alt=""></p>
</li>
<li><p><strong>配置与部署</strong><br> 我们看到之前创建的博客所在文件夹结构：</p>
<blockquote>
<p>Blog<br> 　｜<br> 　｜－－ .deploy_git<br> 　｜－－ node_modules<br> 　｜－－ scaffolds<br> 　｜－－ source<br> 　｜－－ themes<br> 　｜－－ _config.yml<br> 　｜－－ _gitinore<br> 　｜－－ db.json<br> 　｜－－ package.json<br> 　｜－－ debug.log </p>
</blockquote>
<p> 现在需要_config.yml与我们github用户名对应的仓库建立联系。打开<code>_config.yml</code>文件，拉到最后对应修改：</p>
 <figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">type: git</div><div class="line">repo: <span class="link">http://github.com/</span>[<span class="string">username</span>]/[username].github.io</div></pre></td></tr></table></figure>
<p> 并部署：</p>
 <figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean      # 清除缓存</div><div class="line">hexo <span class="keyword">generate</span>   # 生成静态页面</div><div class="line">hexo deploy     # 上传部署</div></pre></td></tr></table></figure>
</li>
</ol>
<p>到现在，我们的“简装房”就有了，后续需要通过主题替换与各种功能设置，来鸟枪换大炮，变成“精装房”(▰˘◡˘▰) ~。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo 中文文档</a> 【包涵：文档、API、插件、主题】<br><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT 使用文档</a>【包含：开始使用、主题配置、第三方服务、内建标签、常见问题】</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
