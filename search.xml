<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[R数据可视化－动态、交互式地图神器（三）自定义Marker]]></title>
      <url>JuniorNi.github.io/2017/03/08/R%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%8D%E5%8A%A8%E6%80%81%E3%80%81%E4%BA%A4%E4%BA%92%E5%BC%8F%E5%9C%B0%E5%9B%BE%E7%A5%9E%E5%99%A8%EF%BC%88%E4%B8%89%EF%BC%89%E7%AC%A6%E5%8F%B7%E6%A0%87%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1 id="Leaflet-LeafletCN-系列"><a href="#Leaflet-LeafletCN-系列" class="headerlink" title="Leaflet/LeafletCN 系列"></a>Leaflet/LeafletCN 系列</h1><p><a href="http://www.jianshu.com/p/5211d151308f" target="_blank" rel="external">R数据可视化－动态、交互式地图神器（一）概述与实现</a><br><a href="http://www.jianshu.com/p/c74656950836" target="_blank" rel="external">R数据可视化－动态、交互式地图神器（二）地图与定位</a>   </p>
<a id="more"></a>
<p>特别喜欢Leaflet的marker自定义，主要有以下几种标记方法</p>
<h2 id="【标记】"><a href="#【标记】" class="headerlink" title="【标记】"></a>【标记】</h2><ul>
<li>addMarkers(popup,icon)   </li>
<li>awesomeMarker(icon,library, markerColor,iconColor )</li>
<li><p>addCircleMarker(popup,color,fillOpacity)</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">-<span class="ruby"> popup：文字描述</span></div><div class="line">-<span class="ruby"> icon：自定义图标</span></div><div class="line"></div><div class="line">-<span class="ruby"> icon：图表类型</span></div><div class="line">-<span class="ruby"> library：图标库</span></div><div class="line">-<span class="ruby"> markerColor：背景颜色</span></div><div class="line">-<span class="ruby"> iconColor ：图标颜色</span></div><div class="line"></div><div class="line">-<span class="ruby"> popup：文字描述</span></div><div class="line">-<span class="ruby"> color：颜色</span></div><div class="line">-<span class="ruby"> fillOpacity：透明度</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="【第一类方法举例】"><a href="#【第一类方法举例】" class="headerlink" title="【第一类方法举例】"></a>【第一类方法举例】</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">df = data.frame(Lat = <span class="number">31</span>+ rnorm(<span class="number">10</span>,<span class="number">0</span>,<span class="number">1</span>), Lon = <span class="number">121</span> + rnorm(<span class="number">10</span>,<span class="number">0</span>,<span class="number">1</span>))  # 生成<span class="number">10</span>个随机点</div><div class="line"></div><div class="line">df   #传数据</div><div class="line">  %&gt;% leaflet()   # 加载地图容器</div><div class="line">  %&gt;% addTiles()  # 加载底图</div><div class="line">  %&gt;% addMarkers()  # 加默认标记</div></pre></td></tr></table></figure>
<p>这种是默认的图标<br><img src="http://upload-images.jianshu.io/upload_images/4762054-9aab31a29346f373.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>接下来自定义icon<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">warIcons &lt;- iconList(  <span class="comment">#自定义icon图标</span></div><div class="line">    <span class="attr">cat</span> = makeIcon(<span class="string">"cat.png"</span>, </div><div class="line">                     <span class="attr">iconWidth</span> = <span class="number">60</span>, <span class="attr">iconHeight</span> = <span class="number">60</span>,</div><div class="line">                     <span class="attr">iconAnchorX</span> = <span class="number">30</span>, <span class="attr">iconAnchorY</span> = <span class="number">30</span>),</div><div class="line">    <span class="attr">dog</span> = makeIcon(<span class="string">"dog.png"</span>, </div><div class="line">                   <span class="attr">iconWidth</span> = <span class="number">60</span>, <span class="attr">iconHeight</span> = <span class="number">60</span>,</div><div class="line">                   <span class="attr">iconAnchorX</span> = <span class="number">30</span>, <span class="attr">iconAnchorY</span> = <span class="number">30</span>)</div><div class="line">)  </div><div class="line"></div><div class="line">geo </div><div class="line">  %&gt;% leaflet()     <span class="comment">#加地图容器</span></div><div class="line">  %&gt;% addProviderTiles(<span class="string">"Thunderforest.SpinalMap"</span>)    <span class="comment">#加地图底图</span></div><div class="line">  %&gt;% addMarkers(<span class="attr">icon=~warIcons[type])</span>    <span class="comment">#使用自定义的icon</span></div></pre></td></tr></table></figure></p>
<p>其中geo数据长这样<br><img src="http://upload-images.jianshu.io/upload_images/4762054-1f9fbb767eb0e2b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="geo"></p>
<p>其中makeIcon用法<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">makeIcon(iconUrl ,iconWidth,iconHeight,iconAnchorX ,iconAnchorY)</div><div class="line"> -<span class="ruby"> iconUrl : 图标的url地址</span></div><div class="line"> -<span class="ruby"> iconWidth ：图标的宽度</span></div><div class="line"> -<span class="ruby"> <span class="symbol">iconHeight:</span> 图标的高度</span></div><div class="line"> -<span class="ruby"> iconAnchorX <span class="symbol">:</span>图标的中心点x轴偏移（以左上角为<span class="number">0</span>,<span class="number">0</span>)</span></div><div class="line"> -<span class="ruby"> iconAnchorY <span class="symbol">:</span>图标的中心点Y轴偏移（以左上角为<span class="number">0</span>,<span class="number">0</span>)</span></div></pre></td></tr></table></figure></p>
<p>效果<br><img src="http://upload-images.jianshu.io/upload_images/4762054-f03c76ada31354f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="猫狗大战"></p>
<h2 id="【第二类方法举例】"><a href="#【第二类方法举例】" class="headerlink" title="【第二类方法举例】"></a>【第二类方法举例】</h2><p>可以在library参数中设定你希望选择的图标库，有以下几个：</p>
<ul>
<li><a href="http://fontawesome.io/icons/" target="_blank" rel="external">fontIcons</a></li>
<li><a href="http://getbootstrap.com/components/#glyphicons" target="_blank" rel="external">glyphicon</a></li>
<li><a href="http://ionicons.com/" target="_blank" rel="external">Ionicons</a></li>
</ul>
<p>如：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">myIcon</span> = makeAwesomeIcon(<span class="attr">icon</span> = <span class="string">"book"</span>, <span class="attr">library</span> = <span class="string">"glyphicon"</span>,<span class="attr">markerColor</span> = <span class="string">"purple"</span>)</div><div class="line"></div><div class="line">df</div><div class="line">%&gt;% leaflet() </div><div class="line">%&gt;% setView() </div><div class="line">%&gt;% addProviderTiles(<span class="string">"NASAGIBS.ViirsEarthAtNight2012"</span>) </div><div class="line">%&gt;% addAwesomeMarkers(<span class="attr">icon=myIcon)</span></div></pre></td></tr></table></figure></p>
<p>效果<br><img src="http://upload-images.jianshu.io/upload_images/4762054-f83a617c9e564333.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="【第三类方法举例】"><a href="#【第三类方法举例】" class="headerlink" title="【第三类方法举例】"></a>【第三类方法举例】</h2><p>addCircleMarkers()方法更简单，直接把点作为一个镶边的圆（或者说圆符号）绘制到地图上，如：<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet<span class="comment">(df)</span> </div><div class="line"><span class="meta">%</span>&gt;<span class="meta">%</span> addProviderTiles<span class="comment">("CartoDB.Positron")</span></div><div class="line"><span class="meta">%</span>&gt;<span class="meta">%</span> addCircleMarkers<span class="comment">()</span></div></pre></td></tr></table></figure></p>
<p>效果<br><img src="http://upload-images.jianshu.io/upload_images/4762054-7119a4682600513c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> Leaflet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建个人博客]]></title>
      <url>JuniorNi.github.io/2017/03/05/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>人啊，总有那么一瞬间，想把自己各种美好与不美好的瞬间，经历与感悟给记录下来。当自己回过头再来看的时候，也许会哭，会笑，酸甜苦辣，各有滋味。当这些点点滴滴汇聚起来之后，估计我会仰天大吼：这一世没白活！<br><a id="more"></a></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>这个周末在网上各种找资料、跨过无数坑之后，个人博客算是初步完成了。</p>
<h2 id="【目标与要求】"><a href="#【目标与要求】" class="headerlink" title="【目标与要求】"></a>【目标与要求】</h2><ul>
<li>美观：对审美有一定要求，有相对不错的外观</li>
<li>功能：起码能分类、打标签、各种时间维度能归档</li>
<li>学习成本：语言、代码相对更容易，学习成本相对较低</li>
<li>时间与金钱成本：最好不用花钱（能省点是一点，我的土壕朋友请无视），不用花太多时间在系统运维  </li>
</ul>
<h2 id="【产品选型】"><a href="#【产品选型】" class="headerlink" title="【产品选型】"></a>【产品选型】</h2><ul>
<li>第三方博客平台，如CSDN、博客园、新浪、豆瓣等。可直接写文章，但模板、样式固定，不算难看也不算好看（简书整体不错，简约风，但是不能带标签，而且鸡汤较多…）</li>
<li>博客工具，部分支持MarkDown语法，免去把文本转化为HTML的痛苦，主要有：<ul>
<li><strong>wordpress</strong>：功能强大，要有主机与域名（免费有限制，正经使用的要花钱购买、备案，还要考虑审批部门的效率…你懂的），折腾太费事费时</li>
<li><strong>ghost</strong>：类似wordpress，相对较重，也是动态网站、需要依赖数据库</li>
<li><strong>Jekyll</strong>：静态文件生成器，支持Markdown，能部署到github。依赖较多库，windows用户不友好，无本地预览功能</li>
<li><strong>hexo</strong>：安装简单，依赖少（仅node），中文支持好（台湾人写的），命令少，易于记忆，可本地实现简单预览，支持markdown。  </li>
</ul>
</li>
</ul>
<p>果断选择了<strong>Hexo</strong>，下面是介绍下主角：</p>
<p> “A fast, simple &amp; powerful blog framework, powered by Node.js.”（官方版）。它是一个Node的静态博客框架，因此没有数据库。可直接部署到github上。好处大大的：省去服务器成本，减少系统运维(系统管理、备份、网络)。</p>
<h2 id="【安装操作】"><a href="#【安装操作】" class="headerlink" title="【安装操作】"></a>【安装操作】</h2><ol>
<li><p><strong>安装node.js</strong>：用来生成静态页面[<a href="https://nodejs.org/en/" target="_blank" rel="external">点击安装node</a>]</p>
</li>
<li><p><strong>注册Github账号</strong>：欢迎加入全球最大的同性交友网站ヾ(◍’౪`◍)ﾉﾞ。不限流量、免费提供开放的托管静态页面的网站。<br> <em>注意！新建的Repo一定要与你的github用户名一模一样，如<strong>[username].github.io</strong></em></p>
</li>
<li><p><strong>安装Git</strong>：用于把本地的Hexo内容沟通,传输,部署到Github上。安装教程可参考廖雪峰的博客[<a href="https://git-for-windows.github.io/" target="_blank" rel="external">点击安装Git</a>]<br> <em>以下步骤一定要做！</em></p>
  <figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user<span class="selector-class">.name</span> <span class="string">"Your Name"</span></div><div class="line">$ git config --global user<span class="selector-class">.email</span> <span class="string">"email@example.com"</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>安装Hexo</strong><br> 在git bash中敲：</p>
 <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-<span class="keyword">cli</span> -g</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="【构建博客】"><a href="#【构建博客】" class="headerlink" title="【构建博客】"></a>【构建博客】</h2><ol>
<li><p><strong>初始化</strong><br> 创建一个新的文件夹（放你博客的地方），右键点击Git Bash Here，执行：</p>
 <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo init</span></div></pre></td></tr></table></figure>
<p> 可以通过以下命令查看是否执行成功</p>
 <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo s</span></div></pre></td></tr></table></figure>
<p> 出现以下代码，恭喜成功~，并在浏览器输入：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 进行本地预览（默认端口4000）</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INFO  <span class="keyword">Start</span> processing</div><div class="line">INFO  Hexo <span class="keyword">is</span> running <span class="keyword">at</span> <span class="keyword">http</span>://localhost:<span class="number">4000</span>/. Press Ctrl+C <span class="keyword">to</span> stop.</div></pre></td></tr></table></figure>
<p> <img src="/images/hexo.png" alt=""></p>
</li>
<li><p><strong>配置与部署</strong><br> 我们看到之前创建的博客所在文件夹结构：</p>
<blockquote>
<p>Blog<br> 　｜<br> 　｜－－ .deploy_git<br> 　｜－－ node_modules<br> 　｜－－ scaffolds<br> 　｜－－ source<br> 　｜－－ themes<br> 　｜－－ _config.yml<br> 　｜－－ _gitinore<br> 　｜－－ db.json<br> 　｜－－ package.json<br> 　｜－－ debug.log </p>
</blockquote>
<p> 现在需要_config.yml与我们github用户名对应的仓库建立联系。打开<code>_config.yml</code>文件，拉到最后对应修改：</p>
 <figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">type: git</div><div class="line">repo: <span class="link">http://github.com/</span>[<span class="string">username</span>]/[username].github.io</div></pre></td></tr></table></figure>
<p> 并部署：</p>
 <figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean      # 清除缓存</div><div class="line">hexo <span class="keyword">generate</span>   # 生成静态页面</div><div class="line">hexo deploy     # 上传部署</div></pre></td></tr></table></figure>
</li>
</ol>
<p>到现在，我们的“简装房”就有了，后续需要通过主题替换与各种功能设置，来鸟枪换大炮，变成“精装房”(▰˘◡˘▰) ~。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo 中文文档</a> 【包涵：文档、API、插件、主题】<br><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT 使用文档</a>【包含：开始使用、主题配置、第三方服务、内建标签、常见问题】</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
